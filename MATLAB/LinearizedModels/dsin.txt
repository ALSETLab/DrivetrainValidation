#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
      10                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
    1000                   # nInterval    Number of communication intervals, if > 0
  1.0000000000000000E-04   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       0                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  2.0000000000000000E-14   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
  9.9999999999999995E-07   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 1                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 0                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(1120,77)
rotateCW.startTime
rotateCW.startValue
drive.controller.m
drive.controller.useDirectionInput
drive.controller.rotateCW
drive.controller.coreElement.m
drive.controller.coreElement.inputTable[1, 1]
drive.controller.coreElement.inputTable[1, 2]
drive.controller.coreElement.inputTable[1, 3]
drive.controller.coreElement.inputTable[2, 1]
drive.controller.coreElement.inputTable[2, 2]
drive.controller.coreElement.inputTable[2, 3]
drive.controller.coreElement.inputTable[3, 1]
drive.controller.coreElement.inputTable[3, 2]
drive.controller.coreElement.inputTable[3, 3]
drive.controller.coreElement.inputTable[4, 1]
drive.controller.coreElement.inputTable[4, 2]
drive.controller.coreElement.inputTable[4, 3]
drive.controller.coreElement.inputTable[5, 1]
drive.controller.coreElement.inputTable[5, 2]
drive.controller.coreElement.inputTable[5, 3]
drive.controller.coreElement.inputTable[6, 1]
drive.controller.coreElement.inputTable[6, 2]
drive.controller.coreElement.inputTable[6, 3]
drive.controller.coreElement.inputTable[7, 1]
drive.controller.coreElement.inputTable[7, 2]
drive.controller.coreElement.inputTable[7, 3]
drive.controller.coreElement.inputTable[8, 1]
drive.controller.coreElement.inputTable[8, 2]
drive.controller.coreElement.inputTable[8, 3]
drive.controller.coreElement.outputTableCW[1, 1]
drive.controller.coreElement.outputTableCW[1, 2]
drive.controller.coreElement.outputTableCW[1, 3]
drive.controller.coreElement.outputTableCW[2, 1]
drive.controller.coreElement.outputTableCW[2, 2]
drive.controller.coreElement.outputTableCW[2, 3]
drive.controller.coreElement.outputTableCW[3, 1]
drive.controller.coreElement.outputTableCW[3, 2]
drive.controller.coreElement.outputTableCW[3, 3]
drive.controller.coreElement.outputTableCW[4, 1]
drive.controller.coreElement.outputTableCW[4, 2]
drive.controller.coreElement.outputTableCW[4, 3]
drive.controller.coreElement.outputTableCW[5, 1]
drive.controller.coreElement.outputTableCW[5, 2]
drive.controller.coreElement.outputTableCW[5, 3]
drive.controller.coreElement.outputTableCW[6, 1]
drive.controller.coreElement.outputTableCW[6, 2]
drive.controller.coreElement.outputTableCW[6, 3]
drive.controller.coreElement.outputTableCW[7, 1]
drive.controller.coreElement.outputTableCW[7, 2]
drive.controller.coreElement.outputTableCW[7, 3]
drive.controller.coreElement.outputTableCW[8, 1]
drive.controller.coreElement.outputTableCW[8, 2]
drive.controller.coreElement.outputTableCW[8, 3]
drive.controller.coreElement.outputTableCCW[1, 1]
drive.controller.coreElement.outputTableCCW[1, 2]
drive.controller.coreElement.outputTableCCW[1, 3]
drive.controller.coreElement.outputTableCCW[2, 1]
drive.controller.coreElement.outputTableCCW[2, 2]
drive.controller.coreElement.outputTableCCW[2, 3]
drive.controller.coreElement.outputTableCCW[3, 1]
drive.controller.coreElement.outputTableCCW[3, 2]
drive.controller.coreElement.outputTableCCW[3, 3]
drive.controller.coreElement.outputTableCCW[4, 1]
drive.controller.coreElement.outputTableCCW[4, 2]
drive.controller.coreElement.outputTableCCW[4, 3]
drive.controller.coreElement.outputTableCCW[5, 1]
drive.controller.coreElement.outputTableCCW[5, 2]
drive.controller.coreElement.outputTableCCW[5, 3]
drive.controller.coreElement.outputTableCCW[6, 1]
drive.controller.coreElement.outputTableCCW[6, 2]
drive.controller.coreElement.outputTableCCW[6, 3]
drive.controller.coreElement.outputTableCCW[7, 1]
drive.controller.coreElement.outputTableCCW[7, 2]
drive.controller.coreElement.outputTableCCW[7, 3]
drive.controller.coreElement.outputTableCCW[8, 1]
drive.controller.coreElement.outputTableCCW[8, 2]
drive.controller.coreElement.outputTableCCW[8, 3]
drive.controller.coreElement.activeRow
drive.controller.coreElement.same
drive.controller.coreElement.rotateCW
drive.controller.coreElement.u[1]
drive.controller.coreElement.u[2]
drive.controller.coreElement.u[3]
drive.controller.coreElement.halfBridgeOutput[1]
drive.controller.coreElement.halfBridgeOutput[2]
drive.controller.coreElement.halfBridgeOutput[3]
drive.controller.hallSensorOutput.m
drive.controller.data.m
drive.controller.data.inputTable[1, 1]
drive.controller.data.inputTable[1, 2]
drive.controller.data.inputTable[1, 3]
drive.controller.data.inputTable[2, 1]
drive.controller.data.inputTable[2, 2]
drive.controller.data.inputTable[2, 3]
drive.controller.data.inputTable[3, 1]
drive.controller.data.inputTable[3, 2]
drive.controller.data.inputTable[3, 3]
drive.controller.data.inputTable[4, 1]
drive.controller.data.inputTable[4, 2]
drive.controller.data.inputTable[4, 3]
drive.controller.data.inputTable[5, 1]
drive.controller.data.inputTable[5, 2]
drive.controller.data.inputTable[5, 3]
drive.controller.data.inputTable[6, 1]
drive.controller.data.inputTable[6, 2]
drive.controller.data.inputTable[6, 3]
drive.controller.data.inputTable[7, 1]
drive.controller.data.inputTable[7, 2]
drive.controller.data.inputTable[7, 3]
drive.controller.data.inputTable[8, 1]
drive.controller.data.inputTable[8, 2]
drive.controller.data.inputTable[8, 3]
drive.controller.data.outputTableCW[1, 1]
drive.controller.data.outputTableCW[1, 2]
drive.controller.data.outputTableCW[1, 3]
drive.controller.data.outputTableCW[2, 1]
drive.controller.data.outputTableCW[2, 2]
drive.controller.data.outputTableCW[2, 3]
drive.controller.data.outputTableCW[3, 1]
drive.controller.data.outputTableCW[3, 2]
drive.controller.data.outputTableCW[3, 3]
drive.controller.data.outputTableCW[4, 1]
drive.controller.data.outputTableCW[4, 2]
drive.controller.data.outputTableCW[4, 3]
drive.controller.data.outputTableCW[5, 1]
drive.controller.data.outputTableCW[5, 2]
drive.controller.data.outputTableCW[5, 3]
drive.controller.data.outputTableCW[6, 1]
drive.controller.data.outputTableCW[6, 2]
drive.controller.data.outputTableCW[6, 3]
drive.controller.data.outputTableCW[7, 1]
drive.controller.data.outputTableCW[7, 2]
drive.controller.data.outputTableCW[7, 3]
drive.controller.data.outputTableCW[8, 1]
drive.controller.data.outputTableCW[8, 2]
drive.controller.data.outputTableCW[8, 3]
drive.controller.data.outputTableCCW[1, 1]
drive.controller.data.outputTableCCW[1, 2]
drive.controller.data.outputTableCCW[1, 3]
drive.controller.data.outputTableCCW[2, 1]
drive.controller.data.outputTableCCW[2, 2]
drive.controller.data.outputTableCCW[2, 3]
drive.controller.data.outputTableCCW[3, 1]
drive.controller.data.outputTableCCW[3, 2]
drive.controller.data.outputTableCCW[3, 3]
drive.controller.data.outputTableCCW[4, 1]
drive.controller.data.outputTableCCW[4, 2]
drive.controller.data.outputTableCCW[4, 3]
drive.controller.data.outputTableCCW[5, 1]
drive.controller.data.outputTableCCW[5, 2]
drive.controller.data.outputTableCCW[5, 3]
drive.controller.data.outputTableCCW[6, 1]
drive.controller.data.outputTableCCW[6, 2]
drive.controller.data.outputTableCCW[6, 3]
drive.controller.data.outputTableCCW[7, 1]
drive.controller.data.outputTableCCW[7, 2]
drive.controller.data.outputTableCCW[7, 3]
drive.controller.data.outputTableCCW[8, 1]
drive.controller.data.outputTableCCW[8, 2]
drive.controller.data.outputTableCCW[8, 3]
drive.modulation.m
drive.modulation.coreElement.m
drive.modulation.y[1, 1]
drive.modulation.y[1, 2]
drive.modulation.y[2, 1]
drive.modulation.y[2, 2]
drive.modulation.y[3, 1]
drive.modulation.y[3, 2]
drive.inverter.m
drive.inverter.pin_p.v
drive.inverter.pin_n.v
drive.inverter.pin_n.i
drive.inverter.coreElement.m
drive.inverter.coreElement.bidirectional
drive.inverter.coreElement.Ron
drive.inverter.coreElement.Goff
drive.inverter.coreElement.star_p.m
drive.inverter.coreElement.star_p.plug_p.m
drive.inverter.coreElement.star_p.plug_p.pin[1].v
drive.inverter.coreElement.star_p.plug_p.pin[1].i
drive.inverter.coreElement.star_p.plug_p.pin[2].i
drive.inverter.coreElement.star_p.plug_p.pin[3].i
drive.inverter.coreElement.star_p.pin_n.i
drive.inverter.coreElement.star_n.m
drive.inverter.coreElement.star_n.plug_p.m
drive.inverter.coreElement.star_n.plug_p.pin[1].v
drive.inverter.coreElement.star_n.plug_p.pin[1].i
drive.inverter.coreElement.star_n.plug_p.pin[2].v
drive.inverter.coreElement.star_n.plug_p.pin[2].i
drive.inverter.coreElement.star_n.plug_p.pin[3].v
drive.inverter.coreElement.star_n.plug_p.pin[3].i
drive.inverter.coreElement.star_n.pin_n.v
drive.inverter.coreElement.star_n.pin_n.i
drive.inverter.coreElement.upperSwitch.m
drive.inverter.coreElement.upperSwitch.v[1]
drive.inverter.coreElement.upperSwitch.v[2]
drive.inverter.coreElement.upperSwitch.v[3]
drive.inverter.coreElement.upperSwitch.i[1]
drive.inverter.coreElement.upperSwitch.i[2]
drive.inverter.coreElement.upperSwitch.i[3]
drive.inverter.coreElement.upperSwitch.plug_p.m
drive.inverter.coreElement.upperSwitch.plug_n.m
drive.inverter.coreElement.upperSwitch.Ron[1]
drive.inverter.coreElement.upperSwitch.Ron[2]
drive.inverter.coreElement.upperSwitch.Ron[3]
drive.inverter.coreElement.upperSwitch.Goff[1]
drive.inverter.coreElement.upperSwitch.Goff[2]
drive.inverter.coreElement.upperSwitch.Goff[3]
drive.inverter.coreElement.upperSwitch.mh
drive.inverter.coreElement.upperSwitch.useHeatPort
drive.inverter.coreElement.upperSwitch.T[1]
drive.inverter.coreElement.upperSwitch.T[2]
drive.inverter.coreElement.upperSwitch.T[3]
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].v
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].Ron
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].Goff
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].useHeatPort
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].T
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].LossPower
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].T_heatPort
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].off
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].s
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].unitVoltage
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].unitCurrent
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].v
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].Ron
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].Goff
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].useHeatPort
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].T
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].LossPower
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].T_heatPort
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].off
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].s
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].unitVoltage
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].unitCurrent
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].v
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].Ron
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].Goff
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].useHeatPort
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].T
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].LossPower
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].T_heatPort
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].off
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].s
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].unitVoltage
drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].unitCurrent
drive.inverter.coreElement.lowerSwitch.m
drive.inverter.coreElement.lowerSwitch.i[1]
drive.inverter.coreElement.lowerSwitch.i[2]
drive.inverter.coreElement.lowerSwitch.i[3]
drive.inverter.coreElement.lowerSwitch.plug_p.m
drive.inverter.coreElement.lowerSwitch.plug_n.m
drive.inverter.coreElement.lowerSwitch.plug_n.pin[1].v
drive.inverter.coreElement.lowerSwitch.plug_n.pin[2].v
drive.inverter.coreElement.lowerSwitch.plug_n.pin[3].v
drive.inverter.coreElement.lowerSwitch.Ron[1]
drive.inverter.coreElement.lowerSwitch.Ron[2]
drive.inverter.coreElement.lowerSwitch.Ron[3]
drive.inverter.coreElement.lowerSwitch.Goff[1]
drive.inverter.coreElement.lowerSwitch.Goff[2]
drive.inverter.coreElement.lowerSwitch.Goff[3]
drive.inverter.coreElement.lowerSwitch.mh
drive.inverter.coreElement.lowerSwitch.useHeatPort
drive.inverter.coreElement.lowerSwitch.T[1]
drive.inverter.coreElement.lowerSwitch.T[2]
drive.inverter.coreElement.lowerSwitch.T[3]
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].n.v
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].Ron
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].Goff
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].useHeatPort
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].T
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].LossPower
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].T_heatPort
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].off
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].s
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].unitVoltage
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].unitCurrent
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].n.v
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].Ron
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].Goff
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].useHeatPort
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].T
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].LossPower
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].T_heatPort
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].off
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].s
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].unitVoltage
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].unitCurrent
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].n.v
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].Ron
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].Goff
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].useHeatPort
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].T
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].LossPower
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].T_heatPort
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].off
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].s
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].unitVoltage
drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].unitCurrent
drive.inverter.coreElement.upperDiode.m
drive.inverter.coreElement.upperDiode.v[1]
drive.inverter.coreElement.upperDiode.v[2]
drive.inverter.coreElement.upperDiode.v[3]
drive.inverter.coreElement.upperDiode.i[1]
drive.inverter.coreElement.upperDiode.i[2]
drive.inverter.coreElement.upperDiode.i[3]
drive.inverter.coreElement.upperDiode.plug_p.m
drive.inverter.coreElement.upperDiode.plug_n.m
drive.inverter.coreElement.upperDiode.Ron[1]
drive.inverter.coreElement.upperDiode.Ron[2]
drive.inverter.coreElement.upperDiode.Ron[3]
drive.inverter.coreElement.upperDiode.Goff[1]
drive.inverter.coreElement.upperDiode.Goff[2]
drive.inverter.coreElement.upperDiode.Goff[3]
drive.inverter.coreElement.upperDiode.Vknee[1]
drive.inverter.coreElement.upperDiode.Vknee[2]
drive.inverter.coreElement.upperDiode.Vknee[3]
drive.inverter.coreElement.upperDiode.mh
drive.inverter.coreElement.upperDiode.useHeatPort
drive.inverter.coreElement.upperDiode.T[1]
drive.inverter.coreElement.upperDiode.T[2]
drive.inverter.coreElement.upperDiode.T[3]
drive.inverter.coreElement.upperDiode.idealDiode[1].v
drive.inverter.coreElement.upperDiode.idealDiode[1].Ron
drive.inverter.coreElement.upperDiode.idealDiode[1].Goff
drive.inverter.coreElement.upperDiode.idealDiode[1].Vknee
drive.inverter.coreElement.upperDiode.idealDiode[1].useHeatPort
drive.inverter.coreElement.upperDiode.idealDiode[1].T
drive.inverter.coreElement.upperDiode.idealDiode[1].LossPower
drive.inverter.coreElement.upperDiode.idealDiode[1].T_heatPort
drive.inverter.coreElement.upperDiode.idealDiode[1].off
drive.inverter.coreElement.upperDiode.idealDiode[1].s
drive.inverter.coreElement.upperDiode.idealDiode[1].unitVoltage
drive.inverter.coreElement.upperDiode.idealDiode[1].unitCurrent
drive.inverter.coreElement.upperDiode.idealDiode[2].v
drive.inverter.coreElement.upperDiode.idealDiode[2].Ron
drive.inverter.coreElement.upperDiode.idealDiode[2].Goff
drive.inverter.coreElement.upperDiode.idealDiode[2].Vknee
drive.inverter.coreElement.upperDiode.idealDiode[2].useHeatPort
drive.inverter.coreElement.upperDiode.idealDiode[2].T
drive.inverter.coreElement.upperDiode.idealDiode[2].LossPower
drive.inverter.coreElement.upperDiode.idealDiode[2].T_heatPort
drive.inverter.coreElement.upperDiode.idealDiode[2].off
drive.inverter.coreElement.upperDiode.idealDiode[2].s
drive.inverter.coreElement.upperDiode.idealDiode[2].unitVoltage
drive.inverter.coreElement.upperDiode.idealDiode[2].unitCurrent
drive.inverter.coreElement.upperDiode.idealDiode[3].v
drive.inverter.coreElement.upperDiode.idealDiode[3].Ron
drive.inverter.coreElement.upperDiode.idealDiode[3].Goff
drive.inverter.coreElement.upperDiode.idealDiode[3].Vknee
drive.inverter.coreElement.upperDiode.idealDiode[3].useHeatPort
drive.inverter.coreElement.upperDiode.idealDiode[3].T
drive.inverter.coreElement.upperDiode.idealDiode[3].LossPower
drive.inverter.coreElement.upperDiode.idealDiode[3].T_heatPort
drive.inverter.coreElement.upperDiode.idealDiode[3].off
drive.inverter.coreElement.upperDiode.idealDiode[3].s
drive.inverter.coreElement.upperDiode.idealDiode[3].unitVoltage
drive.inverter.coreElement.upperDiode.idealDiode[3].unitCurrent
drive.inverter.coreElement.lowerDiode.m
drive.inverter.coreElement.lowerDiode.i[1]
drive.inverter.coreElement.lowerDiode.i[2]
drive.inverter.coreElement.lowerDiode.i[3]
drive.inverter.coreElement.lowerDiode.plug_p.m
drive.inverter.coreElement.lowerDiode.plug_p.pin[1].v
drive.inverter.coreElement.lowerDiode.plug_p.pin[2].v
drive.inverter.coreElement.lowerDiode.plug_p.pin[3].v
drive.inverter.coreElement.lowerDiode.plug_n.m
drive.inverter.coreElement.lowerDiode.Ron[1]
drive.inverter.coreElement.lowerDiode.Ron[2]
drive.inverter.coreElement.lowerDiode.Ron[3]
drive.inverter.coreElement.lowerDiode.Goff[1]
drive.inverter.coreElement.lowerDiode.Goff[2]
drive.inverter.coreElement.lowerDiode.Goff[3]
drive.inverter.coreElement.lowerDiode.Vknee[1]
drive.inverter.coreElement.lowerDiode.Vknee[2]
drive.inverter.coreElement.lowerDiode.Vknee[3]
drive.inverter.coreElement.lowerDiode.mh
drive.inverter.coreElement.lowerDiode.useHeatPort
drive.inverter.coreElement.lowerDiode.T[1]
drive.inverter.coreElement.lowerDiode.T[2]
drive.inverter.coreElement.lowerDiode.T[3]
drive.inverter.coreElement.lowerDiode.idealDiode[1].p.v
drive.inverter.coreElement.lowerDiode.idealDiode[1].Ron
drive.inverter.coreElement.lowerDiode.idealDiode[1].Goff
drive.inverter.coreElement.lowerDiode.idealDiode[1].Vknee
drive.inverter.coreElement.lowerDiode.idealDiode[1].useHeatPort
drive.inverter.coreElement.lowerDiode.idealDiode[1].T
drive.inverter.coreElement.lowerDiode.idealDiode[1].LossPower
drive.inverter.coreElement.lowerDiode.idealDiode[1].T_heatPort
drive.inverter.coreElement.lowerDiode.idealDiode[1].off
drive.inverter.coreElement.lowerDiode.idealDiode[1].s
drive.inverter.coreElement.lowerDiode.idealDiode[1].unitVoltage
drive.inverter.coreElement.lowerDiode.idealDiode[1].unitCurrent
drive.inverter.coreElement.lowerDiode.idealDiode[2].p.v
drive.inverter.coreElement.lowerDiode.idealDiode[2].Ron
drive.inverter.coreElement.lowerDiode.idealDiode[2].Goff
drive.inverter.coreElement.lowerDiode.idealDiode[2].Vknee
drive.inverter.coreElement.lowerDiode.idealDiode[2].useHeatPort
drive.inverter.coreElement.lowerDiode.idealDiode[2].T
drive.inverter.coreElement.lowerDiode.idealDiode[2].LossPower
drive.inverter.coreElement.lowerDiode.idealDiode[2].T_heatPort
drive.inverter.coreElement.lowerDiode.idealDiode[2].off
drive.inverter.coreElement.lowerDiode.idealDiode[2].s
drive.inverter.coreElement.lowerDiode.idealDiode[2].unitVoltage
drive.inverter.coreElement.lowerDiode.idealDiode[2].unitCurrent
drive.inverter.coreElement.lowerDiode.idealDiode[3].p.v
drive.inverter.coreElement.lowerDiode.idealDiode[3].Ron
drive.inverter.coreElement.lowerDiode.idealDiode[3].Goff
drive.inverter.coreElement.lowerDiode.idealDiode[3].Vknee
drive.inverter.coreElement.lowerDiode.idealDiode[3].useHeatPort
drive.inverter.coreElement.lowerDiode.idealDiode[3].T
drive.inverter.coreElement.lowerDiode.idealDiode[3].LossPower
drive.inverter.coreElement.lowerDiode.idealDiode[3].T_heatPort
drive.inverter.coreElement.lowerDiode.idealDiode[3].off
drive.inverter.coreElement.lowerDiode.idealDiode[3].s
drive.inverter.coreElement.lowerDiode.idealDiode[3].unitVoltage
drive.inverter.coreElement.lowerDiode.idealDiode[3].unitCurrent
drive.inverter.coreElement.idealBuckConverter.v1
drive.inverter.coreElement.idealBuckConverter.p1.v
drive.inverter.coreElement.idealBuckConverter.n1.v
drive.inverter.coreElement.idealBuckConverter.n2.v
drive.inverter.coreElement.idealBuckConverter.dutyCycle
drive.inverter.coreElement.pin_p.v
drive.inverter.coreElement.pin_n.v
drive.inverter.coreElement.plug.m
drive.inverter.coreElement.rotationSwitch.m
drive.inverter.coreElement.rotationSwitch.bidirectional
drive.inverter.coreElement.uniOrBidirectional.y
drive.inverter.coreElement.uniOrBidirectional.u1
drive.inverter.coreElement.uniOrBidirectional.u2
drive.inverter.coreElement.uniOrBidirectional.y1
drive.inverter.coreElement.uniOrBidirectional.y2
drive.inverter.coreElement.uniOrBidirectional.k
drive.inverter.coreElement.uniOrBidirectional.y0
drive.inverter.coreElement.uniOrBidirectional.gradient.k
drive.inverter.coreElement.uniOrBidirectional.add.u1
drive.inverter.coreElement.uniOrBidirectional.add.k1
drive.inverter.coreElement.uniOrBidirectional.add.k2
drive.inverter.coreElement.uniOrBidirectional.offset.k
drive.inverter.coreElement.uniOrBidirectional.offset.y
drive.inverter.coreElement.uniOrBidirectional.limiter.uMax
drive.inverter.coreElement.uniOrBidirectional.limiter.uMin
drive.inverter.coreElement.uniOrBidirectional.limiter.strict
drive.inverter.coreElement.uniOrBidirectional.limiter.homotopyType
drive.inverter.coreElement.abs.generateEvent
drive.inverter.data.m
drive.inverter.data.bidirectional
drive.inverter.data.Ron
drive.inverter.data.Goff
drive.inverter.plug.m
drive.inverter.plug.pin[1].v
drive.inverter.plug.pin[2].v
drive.inverter.plug.pin[3].v
drive.inverter.currentSensorDC.p.v
drive.inverter.currentSensorDC.n.v
drive.inverter.currentSensorAC.m
drive.inverter.currentSensorAC.plug_p.m
drive.inverter.currentSensorAC.plug_n.m
drive.inverter.currentAC.m
drive.inverter.voltageSensorDC.p.v
drive.inverter.voltageSensorDC.p.i
drive.inverter.voltageSensorDC.n.v
drive.inverter.voltageSensorDC.n.i
drive.inverter.voltageSensorDC.v
drive.inverter.voltageDC.u
drive.multiSensorMotor.power
drive.machine.data.m
drive.machine.data.Rt
drive.machine.data.p
drive.machine.data.useL
drive.machine.data.useLt
drive.machine.data.Lt
drive.machine.data.L
drive.machine.data.M
drive.machine.data.Ls_sigma
drive.machine.data.fluxSource
drive.machine.data.k_tau
drive.machine.data.k_speed
drive.machine.data.Jr
drive.machine.data.Js
drive.machine.data.I_0
drive.machine.data.w_0
drive.machine.data.u_s_nom
drive.machine.data.i_s_nom
drive.machine.data.tau_nom
drive.machine.data.w_nom
drive.machine.data.P_nom
drive.machine.data.kDC
drive.machine.data.b
drive.machine.data.Rs
drive.machine.data.Ls
drive.machine.data.maxEMF_constant
drive.machine.data.maxEMF_start[1]
drive.machine.data.maxEMF_start[2]
drive.machine.data.maxEMF_start[3]
drive.machine.useSupport
drive.machine.useThermalPort
drive.machine.plug_p.m
drive.machine.powerBalance.electricMachinePower
drive.machine.powerBalance.innerMachinePower
drive.machine.powerBalance.statorInertiaPower
drive.machine.powerBalance.rotorInertiaPower
drive.machine.powerBalance.totalLossPower
drive.machine.powerBalance.statorWindingLossPower
drive.machine.powerBalance.frictionLossPower
drive.machine.angleSensor.m
drive.machine.angleSensor.p
drive.machine.angleSensor.flange.tau
drive.machine.angleSensor.support.phi
drive.machine.angleSensor.support.tau
drive.machine.angleSensor.coreElement.m
drive.machine.angleSensor.coreElement.pulseStart[1]
drive.machine.angleSensor.coreElement.pulseStart[2]
drive.machine.angleSensor.coreElement.pulseStart[3]
drive.machine.angleSensor.coreElement.pulseWidth
drive.machine.angleSensor.coreElement.p
drive.machine.angleSensor.coreElement.pulseEnd[1]
drive.machine.angleSensor.coreElement.pulseEnd[2]
drive.machine.angleSensor.coreElement.pulseEnd[3]
drive.machine.angleSensor.coreElement.pulseStartLim[1]
drive.machine.angleSensor.coreElement.pulseStartLim[2]
drive.machine.angleSensor.coreElement.pulseStartLim[3]
drive.machine.angleSensor.coreElement.pulseEndLim[1]
drive.machine.angleSensor.coreElement.pulseEndLim[2]
drive.machine.angleSensor.coreElement.pulseEndLim[3]
drive.machine.angleSensor.coreElement.electricAngle
drive.machine.angleSensor.coreElement.electricAngleLim
drive.machine.angleSensor.coreElement.flange.tau
drive.machine.angleSensor.coreElement.support.phi
drive.machine.angleSensor.coreElement.support.tau
drive.machine.angleSensor.pulseConfiguration.m
drive.machine.angleSensor.pulseConfiguration.pulseStart[1]
drive.machine.angleSensor.pulseConfiguration.pulseStart[2]
drive.machine.angleSensor.pulseConfiguration.pulseStart[3]
drive.machine.angleSensor.pulseConfiguration.pulseWidth
drive.machine.angleSensor.hallSensorOutput.m
drive.machine.coreElement.m
drive.machine.coreElement.Rs
drive.machine.coreElement.Ls
drive.machine.coreElement.fluxSource
drive.machine.coreElement.k_tau
drive.machine.coreElement.k_speed
drive.machine.coreElement.p
drive.machine.coreElement.Jr
drive.machine.coreElement.Js
drive.machine.coreElement.b
drive.machine.coreElement.useSupport
drive.machine.coreElement.useThermalPort
drive.machine.coreElement.maxEMF_constant
drive.machine.coreElement.maxEMF_start[1]
drive.machine.coreElement.maxEMF_start[2]
drive.machine.coreElement.maxEMF_start[3]
drive.machine.coreElement.v[1]
drive.machine.coreElement.v[2]
drive.machine.coreElement.v[3]
drive.machine.coreElement.plug_sp.m
drive.machine.coreElement.plug_sn.m
drive.machine.coreElement.plug_sn.pin[1].v
drive.machine.coreElement.resistor.m
drive.machine.coreElement.resistor.v[1]
drive.machine.coreElement.resistor.v[2]
drive.machine.coreElement.resistor.v[3]
drive.machine.coreElement.resistor.plug_p.m
drive.machine.coreElement.resistor.plug_n.m
drive.machine.coreElement.resistor.plug_n.pin[1].v
drive.machine.coreElement.resistor.plug_n.pin[2].v
drive.machine.coreElement.resistor.plug_n.pin[3].v
drive.machine.coreElement.resistor.R[1]
drive.machine.coreElement.resistor.R[2]
drive.machine.coreElement.resistor.R[3]
drive.machine.coreElement.resistor.T_ref[1]
drive.machine.coreElement.resistor.T_ref[2]
drive.machine.coreElement.resistor.T_ref[3]
drive.machine.coreElement.resistor.alpha[1]
drive.machine.coreElement.resistor.alpha[2]
drive.machine.coreElement.resistor.alpha[3]
drive.machine.coreElement.resistor.mh
drive.machine.coreElement.resistor.useHeatPort
drive.machine.coreElement.resistor.T[1]
drive.machine.coreElement.resistor.T[2]
drive.machine.coreElement.resistor.T[3]
drive.machine.coreElement.resistor.resistor[1].R
drive.machine.coreElement.resistor.resistor[1].T_ref
drive.machine.coreElement.resistor.resistor[1].alpha
drive.machine.coreElement.resistor.resistor[1].v
drive.machine.coreElement.resistor.resistor[1].useHeatPort
drive.machine.coreElement.resistor.resistor[1].T
drive.machine.coreElement.resistor.resistor[1].LossPower
drive.machine.coreElement.resistor.resistor[1].T_heatPort
drive.machine.coreElement.resistor.resistor[1].R_actual
drive.machine.coreElement.resistor.resistor[2].R
drive.machine.coreElement.resistor.resistor[2].T_ref
drive.machine.coreElement.resistor.resistor[2].alpha
drive.machine.coreElement.resistor.resistor[2].v
drive.machine.coreElement.resistor.resistor[2].useHeatPort
drive.machine.coreElement.resistor.resistor[2].T
drive.machine.coreElement.resistor.resistor[2].LossPower
drive.machine.coreElement.resistor.resistor[2].T_heatPort
drive.machine.coreElement.resistor.resistor[2].R_actual
drive.machine.coreElement.resistor.resistor[3].R
drive.machine.coreElement.resistor.resistor[3].T_ref
drive.machine.coreElement.resistor.resistor[3].alpha
drive.machine.coreElement.resistor.resistor[3].v
drive.machine.coreElement.resistor.resistor[3].useHeatPort
drive.machine.coreElement.resistor.resistor[3].T
drive.machine.coreElement.resistor.resistor[3].LossPower
drive.machine.coreElement.resistor.resistor[3].T_heatPort
drive.machine.coreElement.resistor.resistor[3].R_actual
drive.machine.coreElement.overallInductance.m
drive.machine.coreElement.overallInductance.v[1]
drive.machine.coreElement.overallInductance.v[2]
drive.machine.coreElement.overallInductance.v[3]
drive.machine.coreElement.overallInductance.plug_p.m
drive.machine.coreElement.overallInductance.plug_n.m
drive.machine.coreElement.overallInductance.plug_n.pin[1].v
drive.machine.coreElement.overallInductance.plug_n.pin[2].v
drive.machine.coreElement.overallInductance.plug_n.pin[3].v
drive.machine.coreElement.overallInductance.L[1]
drive.machine.coreElement.overallInductance.L[2]
drive.machine.coreElement.overallInductance.L[3]
drive.machine.coreElement.overallInductance.inductor[1].v
drive.machine.coreElement.overallInductance.inductor[1].i
drive.machine.coreElement.overallInductance.inductor[1].der(i)
drive.machine.coreElement.overallInductance.inductor[1].L
drive.machine.coreElement.overallInductance.inductor[2].v
drive.machine.coreElement.overallInductance.inductor[2].i
drive.machine.coreElement.overallInductance.inductor[2].der(i)
drive.machine.coreElement.overallInductance.inductor[2].L
drive.machine.coreElement.overallInductance.inductor[3].v
drive.machine.coreElement.overallInductance.inductor[3].i
drive.machine.coreElement.overallInductance.inductor[3].der(i)
drive.machine.coreElement.overallInductance.inductor[3].L
drive.machine.coreElement.trapezoidalEMF.m
drive.machine.coreElement.trapezoidalEMF.fluxSource
drive.machine.coreElement.trapezoidalEMF.k_tau
drive.machine.coreElement.trapezoidalEMF.k_speed
drive.machine.coreElement.trapezoidalEMF.p
drive.machine.coreElement.trapezoidalEMF.V_backEMF_max
drive.machine.coreElement.trapezoidalEMF.maxEMF_constant
drive.machine.coreElement.trapezoidalEMF.maxEMF_start[1]
drive.machine.coreElement.trapezoidalEMF.maxEMF_start[2]
drive.machine.coreElement.trapezoidalEMF.maxEMF_start[3]
drive.machine.coreElement.trapezoidalEMF.changingEMF
drive.machine.coreElement.trapezoidalEMF.slopeEMF
drive.machine.coreElement.trapezoidalEMF.psi_max
drive.machine.coreElement.trapezoidalEMF.theta
drive.machine.coreElement.trapezoidalEMF.w_el
drive.machine.coreElement.trapezoidalEMF.v[1]
drive.machine.coreElement.trapezoidalEMF.v[2]
drive.machine.coreElement.trapezoidalEMF.v[3]
drive.machine.coreElement.trapezoidalEMF.f[1]
drive.machine.coreElement.trapezoidalEMF.f[2]
drive.machine.coreElement.trapezoidalEMF.f[3]
drive.machine.coreElement.trapezoidalEMF.backEMF[1]
drive.machine.coreElement.trapezoidalEMF.backEMF[2]
drive.machine.coreElement.trapezoidalEMF.backEMF[3]
drive.machine.coreElement.trapezoidalEMF.theta1[1]
drive.machine.coreElement.trapezoidalEMF.theta1[2]
drive.machine.coreElement.trapezoidalEMF.theta1[3]
drive.machine.coreElement.trapezoidalEMF.theta2[1]
drive.machine.coreElement.trapezoidalEMF.theta2[2]
drive.machine.coreElement.trapezoidalEMF.theta2[3]
drive.machine.coreElement.trapezoidalEMF.theta3[1]
drive.machine.coreElement.trapezoidalEMF.theta3[2]
drive.machine.coreElement.trapezoidalEMF.theta3[3]
drive.machine.coreElement.trapezoidalEMF.theta4[1]
drive.machine.coreElement.trapezoidalEMF.theta4[2]
drive.machine.coreElement.trapezoidalEMF.theta4[3]
drive.machine.coreElement.trapezoidalEMF.TM[1, 1, 1]
drive.machine.coreElement.trapezoidalEMF.TM[1, 1, 2]
drive.machine.coreElement.trapezoidalEMF.TM[1, 1, 3]
drive.machine.coreElement.trapezoidalEMF.TM[1, 2, 1]
drive.machine.coreElement.trapezoidalEMF.TM[1, 2, 2]
drive.machine.coreElement.trapezoidalEMF.TM[1, 2, 3]
drive.machine.coreElement.trapezoidalEMF.TM[2, 1, 1]
drive.machine.coreElement.trapezoidalEMF.TM[2, 1, 2]
drive.machine.coreElement.trapezoidalEMF.TM[2, 1, 3]
drive.machine.coreElement.trapezoidalEMF.TM[2, 2, 1]
drive.machine.coreElement.trapezoidalEMF.TM[2, 2, 2]
drive.machine.coreElement.trapezoidalEMF.TM[2, 2, 3]
drive.machine.coreElement.trapezoidalEMF.TM[3, 1, 1]
drive.machine.coreElement.trapezoidalEMF.TM[3, 1, 2]
drive.machine.coreElement.trapezoidalEMF.TM[3, 1, 3]
drive.machine.coreElement.trapezoidalEMF.TM[3, 2, 1]
drive.machine.coreElement.trapezoidalEMF.TM[3, 2, 2]
drive.machine.coreElement.trapezoidalEMF.TM[3, 2, 3]
drive.machine.coreElement.trapezoidalEMF.TM[4, 1, 1]
drive.machine.coreElement.trapezoidalEMF.TM[4, 1, 2]
drive.machine.coreElement.trapezoidalEMF.TM[4, 1, 3]
drive.machine.coreElement.trapezoidalEMF.TM[4, 2, 1]
drive.machine.coreElement.trapezoidalEMF.TM[4, 2, 2]
drive.machine.coreElement.trapezoidalEMF.TM[4, 2, 3]
drive.machine.coreElement.trapezoidalEMF.TMS[1, 1, 1]
drive.machine.coreElement.trapezoidalEMF.TMS[1, 1, 2]
drive.machine.coreElement.trapezoidalEMF.TMS[1, 2, 1]
drive.machine.coreElement.trapezoidalEMF.TMS[1, 2, 2]
drive.machine.coreElement.trapezoidalEMF.TMS[1, 3, 1]
drive.machine.coreElement.trapezoidalEMF.TMS[1, 3, 2]
drive.machine.coreElement.trapezoidalEMF.TMS[1, 4, 1]
drive.machine.coreElement.trapezoidalEMF.TMS[1, 4, 2]
drive.machine.coreElement.trapezoidalEMF.TMS[2, 1, 1]
drive.machine.coreElement.trapezoidalEMF.TMS[2, 1, 2]
drive.machine.coreElement.trapezoidalEMF.TMS[2, 2, 1]
drive.machine.coreElement.trapezoidalEMF.TMS[2, 2, 2]
drive.machine.coreElement.trapezoidalEMF.TMS[2, 3, 1]
drive.machine.coreElement.trapezoidalEMF.TMS[2, 3, 2]
drive.machine.coreElement.trapezoidalEMF.TMS[2, 4, 1]
drive.machine.coreElement.trapezoidalEMF.TMS[2, 4, 2]
drive.machine.coreElement.trapezoidalEMF.TMS[3, 1, 1]
drive.machine.coreElement.trapezoidalEMF.TMS[3, 1, 2]
drive.machine.coreElement.trapezoidalEMF.TMS[3, 2, 1]
drive.machine.coreElement.trapezoidalEMF.TMS[3, 2, 2]
drive.machine.coreElement.trapezoidalEMF.TMS[3, 3, 1]
drive.machine.coreElement.trapezoidalEMF.TMS[3, 3, 2]
drive.machine.coreElement.trapezoidalEMF.TMS[3, 4, 1]
drive.machine.coreElement.trapezoidalEMF.TMS[3, 4, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE1[1, 1, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE1[1, 1, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE1[2, 1, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE1[2, 1, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE1[3, 1, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE1[3, 1, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE6[1, 1, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE6[1, 1, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE6[2, 1, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE6[2, 1, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE6[3, 1, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE6[3, 1, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[1, 1, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[1, 1, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[1, 2, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[1, 2, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[1, 3, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[1, 3, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[1, 4, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[1, 4, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[1, 5, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[1, 5, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[1, 6, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[1, 6, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[2, 1, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[2, 1, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[2, 2, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[2, 2, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[2, 3, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[2, 3, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[2, 4, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[2, 4, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[2, 5, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[2, 5, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[2, 6, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[2, 6, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[3, 1, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[3, 1, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[3, 2, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[3, 2, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[3, 3, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[3, 3, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[3, 4, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[3, 4, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[3, 5, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[3, 5, 2]
drive.machine.coreElement.trapezoidalEMF.TMSE[3, 6, 1]
drive.machine.coreElement.trapezoidalEMF.TMSE[3, 6, 2]
drive.machine.coreElement.trapezoidalEMF.plug_sp.m
drive.machine.coreElement.trapezoidalEMF.plug_sn.m
drive.machine.coreElement.trapezoidalEMF.support.phi
drive.machine.coreElement.trapezoidalEMF.support.der(phi)
drive.machine.coreElement.inertiaRotor.flange_b.tau
drive.machine.coreElement.inertiaRotor.J
drive.machine.coreElement.inertiaRotor.stateSelect
drive.machine.coreElement.damper.phi_rel
drive.machine.coreElement.damper.der(phi_rel)
drive.machine.coreElement.damper.w_rel
drive.machine.coreElement.damper.der(w_rel)
drive.machine.coreElement.damper.tau
drive.machine.coreElement.damper.flange_b.phi
drive.machine.coreElement.damper.phi_nominal
drive.machine.coreElement.damper.stateSelect
drive.machine.coreElement.damper.d
drive.machine.coreElement.damper.useHeatPort
drive.machine.coreElement.inertiaStator.flange_a.phi
drive.machine.coreElement.inertiaStator.flange_a.tau
drive.machine.coreElement.inertiaStator.flange_b.phi
drive.machine.coreElement.inertiaStator.flange_b.tau
drive.machine.coreElement.inertiaStator.J
drive.machine.coreElement.inertiaStator.stateSelect
drive.machine.coreElement.inertiaStator.phi
drive.machine.coreElement.inertiaStator.der(phi)
drive.machine.coreElement.inertiaStator.w
drive.machine.coreElement.inertiaStator.der(w)
drive.machine.coreElement.inertiaStator.a
drive.machine.coreElement.fixed.phi0
drive.machine.coreElement.fixed.flange.phi
drive.machine.coreElement.fixed.flange.tau
drive.machine.coreElement.internalSupport.phi
drive.machine.coreElement.internalSupport.tau
drive.machine.coreElement.airgapTorque
drive.machine.coreElement.innerTorque
drive.machine.terminalBox.m
drive.machine.terminalBox.terminalConnection
drive.machine.terminalBox.isDelta
drive.machine.terminalBox.plug_sp.m
drive.machine.terminalBox.plug_sn.m
drive.machine.terminalBox.plugSupply.m
drive.machine.terminalBox.starpoint.i
drive.machine.terminalBox.star.m
drive.machine.terminalBox.star.plug_p.m
drive.machine.terminalBox.star.pin_n.i
drive.machine.fixed.phi0
drive.machine.fixed.flange.phi
drive.machine.fixed.flange.tau
drive.machine.internalSupport.phi
drive.machine.internalSupport.tau
drive.machine.electricPowerSensor.m
drive.machine.electricPowerSensor.Q
drive.machine.electricPowerSensor.plug_p.m
drive.machine.electricPowerSensor.plug_ni.m
drive.machine.electricPowerSensor.plug_nv.m
drive.machine.electricPowerSensor.plug_nv.pin[1].v
drive.machine.electricPowerSensor.plug_nv.pin[1].i
drive.machine.electricPowerSensor.plug_nv.pin[2].v
drive.machine.electricPowerSensor.plug_nv.pin[2].i
drive.machine.electricPowerSensor.plug_nv.pin[3].v
drive.machine.electricPowerSensor.plug_nv.pin[3].i
drive.machine.electricPowerSensor.v_[1]
drive.machine.electricPowerSensor.v_[2]
drive.machine.electricPowerSensor.i_[1]
drive.machine.electricPowerSensor.i_[2]
drive.machine.star.m
drive.machine.star.plug_p.m
drive.machine.star.plug_p.pin[1].v
drive.machine.star.plug_p.pin[1].i
drive.machine.star.plug_p.pin[2].v
drive.machine.star.plug_p.pin[2].i
drive.machine.star.plug_p.pin[3].v
drive.machine.star.plug_p.pin[3].i
drive.machine.star.pin_n.v
drive.machine.star.pin_n.i
drive.machine.ground.p.v
drive.machine.ground.p.i
drive.machine.signChange.k
drive.machine.speedSensor.flange_a.phi
drive.machine.speedSensor.flange_a.tau
drive.machine.speedSensor.flange_b.tau
drive.machine.angleSensorIdeal.flange_a.phi
drive.machine.angleSensorIdeal.flange_a.tau
drive.machine.angleSensorIdeal.flange_b.tau
drive.ground.p.v
drive.ground.p.i
drive.speedDependentTorque.useSupport
drive.speedDependentTorque.flange.tau
drive.speedDependentTorque.phi_support
drive.speedDependentTorque.tau
drive.inertia.flange_b.tau
drive.inertia.J
drive.inertia.stateSelect
drive.multiSensorLoad.flange_a.tau
drive.multiSensorLoad.flange_b.tau
drive.multiSensorLoad.power
drive.multiSensorLoad.tau
drive.pin_p.v
drive.pin_p.i
drive.pin_n.v
drive.tau
drive.tau1
dutyCycle.height
dutyCycle.y
dutyCycle.offset
dutyCycle.startTime
constantVoltage.V
constantVoltage.v
constantVoltage.p.v
constantVoltage.n.v
dutyCycle1.k
dutyCycle1.y
firstOrder.k
firstOrder.T
firstOrder.initType
firstOrder.y_start
firstOrder.y
firstOrder.der(y)
rotateCW1.startTime
rotateCW1.startValue
rotateCW1.y
dutyCycle2.height
dutyCycle2.y
dutyCycle2.offset
dutyCycle2.startTime
drive_45_Outputs.controller.m
drive_45_Outputs.controller.useDirectionInput
drive_45_Outputs.controller.rotateCW
drive_45_Outputs.modulation.m
drive_45_Outputs.inverter.pin_p.v
drive_45_Outputs.inverter.pin_n.v
drive_45_Outputs.inverter.data.bidirectional
drive_45_Outputs.inverter.pin_p_Out.v
drive_45_Outputs.inverter.pin_n_Out.v
drive_45_Outputs.inverter.coreElement.bidirectional
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.y
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.u1
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.u2
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.y1
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.y2
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.k
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.y0
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.gradient.k
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.add.u1
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.add.k1
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.add.k2
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.offset.k
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.offset.y
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.limiter.uMax
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.limiter.uMin
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.limiter.strict
drive_45_Outputs.inverter.coreElement.uniOrBidirectional.limiter.homotopyType
drive_45_Outputs.inverter.coreElement.idealBuckConverter.v1
drive_45_Outputs.inverter.coreElement.idealBuckConverter.p1.v
drive_45_Outputs.inverter.coreElement.idealBuckConverter.n1.v
drive_45_Outputs.inverter.coreElement.idealBuckConverter.n2.v
drive_45_Outputs.inverter.coreElement.idealBuckConverter.dutyCycle
drive_45_Outputs.inverter.coreElement.pin_p_supply.v
drive_45_Outputs.inverter.coreElement.pin_n_supply.v
drive_45_Outputs.inverter.coreElement.pin_n.v
drive_45_Outputs.inverter.coreElement.signChanger.y
drive_45_Outputs.inverter.ground.p.v
drive_45_Outputs.inverter.ground.p.i
drive_45_Outputs.inverter.currentSensorDC.p.v
drive_45_Outputs.inverter.currentSensorDC.n.v
drive_45_Outputs.inverter.currentAC_Averaged.u
drive_45_Outputs.inverter.voltageChanger.y
drive_45_Outputs.inverter.voltageSensorDC.p.v
drive_45_Outputs.inverter.voltageSensorDC.p.i
drive_45_Outputs.inverter.voltageSensorDC.n.v
drive_45_Outputs.inverter.voltageSensorDC.n.i
drive_45_Outputs.inverter.voltageSensorDC.v
drive_45_Outputs.inverter.voltageDC.u
drive_45_Outputs.multiSensorMotor.power
drive_45_Outputs.machine.data.m
drive_45_Outputs.machine.data.Rt
drive_45_Outputs.machine.data.p
drive_45_Outputs.machine.data.useL
drive_45_Outputs.machine.data.useLt
drive_45_Outputs.machine.data.Lt
drive_45_Outputs.machine.data.L
drive_45_Outputs.machine.data.M
drive_45_Outputs.machine.data.Ls_sigma
drive_45_Outputs.machine.data.fluxSource
drive_45_Outputs.machine.data.k_tau
drive_45_Outputs.machine.data.k_speed
drive_45_Outputs.machine.data.Jr
drive_45_Outputs.machine.data.Js
drive_45_Outputs.machine.data.I_0
drive_45_Outputs.machine.data.w_0
drive_45_Outputs.machine.data.u_s_nom
drive_45_Outputs.machine.data.i_s_nom
drive_45_Outputs.machine.data.tau_nom
drive_45_Outputs.machine.data.w_nom
drive_45_Outputs.machine.data.P_nom
drive_45_Outputs.machine.data.kDC
drive_45_Outputs.machine.data.b
drive_45_Outputs.machine.data.Rs
drive_45_Outputs.machine.data.Ls
drive_45_Outputs.machine.data.maxEMF_constant
drive_45_Outputs.machine.data.maxEMF_start[1]
drive_45_Outputs.machine.data.maxEMF_start[2]
drive_45_Outputs.machine.data.maxEMF_start[3]
drive_45_Outputs.machine.useSupport
drive_45_Outputs.machine.useThermalPort
drive_45_Outputs.machine.pin_n.v
drive_45_Outputs.machine.powerBalance.electricMachinePower
drive_45_Outputs.machine.powerBalance.innerMachinePower
drive_45_Outputs.machine.powerBalance.statorInertiaPower
drive_45_Outputs.machine.powerBalance.rotorInertiaPower
drive_45_Outputs.machine.powerBalance.totalLossPower
drive_45_Outputs.machine.powerBalance.statorWindingLossPower
drive_45_Outputs.machine.powerBalance.frictionLossPower
drive_45_Outputs.machine.coreElement.R
drive_45_Outputs.machine.coreElement.useL
drive_45_Outputs.machine.coreElement.L
drive_45_Outputs.machine.coreElement.Jr
drive_45_Outputs.machine.coreElement.Js
drive_45_Outputs.machine.coreElement.b
drive_45_Outputs.machine.coreElement.useSupport
drive_45_Outputs.machine.coreElement.useThermalPort
drive_45_Outputs.machine.coreElement.k
drive_45_Outputs.machine.coreElement.pin_n.v
drive_45_Outputs.machine.coreElement.resistor.R
drive_45_Outputs.machine.coreElement.resistor.T_ref
drive_45_Outputs.machine.coreElement.resistor.alpha
drive_45_Outputs.machine.coreElement.resistor.v
drive_45_Outputs.machine.coreElement.resistor.n.v
drive_45_Outputs.machine.coreElement.resistor.useHeatPort
drive_45_Outputs.machine.coreElement.resistor.T
drive_45_Outputs.machine.coreElement.resistor.T_heatPort
drive_45_Outputs.machine.coreElement.resistor.R_actual
drive_45_Outputs.machine.coreElement.backEMF.useSupport
drive_45_Outputs.machine.coreElement.backEMF.k
drive_45_Outputs.machine.coreElement.backEMF.v
drive_45_Outputs.machine.coreElement.backEMF.n.v
drive_45_Outputs.machine.coreElement.backEMF.support.phi
drive_45_Outputs.machine.coreElement.backEMF.internalSupport.phi
drive_45_Outputs.machine.coreElement.backEMF.internalSupport.flange.phi
drive_45_Outputs.machine.coreElement.inertiaRotor.flange_b.tau
drive_45_Outputs.machine.coreElement.inertiaRotor.J
drive_45_Outputs.machine.coreElement.inertiaRotor.stateSelect
drive_45_Outputs.machine.coreElement.damper.phi_rel
drive_45_Outputs.machine.coreElement.damper.der(phi_rel)
drive_45_Outputs.machine.coreElement.damper.w_rel
drive_45_Outputs.machine.coreElement.damper.der(w_rel)
drive_45_Outputs.machine.coreElement.damper.tau
drive_45_Outputs.machine.coreElement.damper.flange_b.phi
drive_45_Outputs.machine.coreElement.damper.phi_nominal
drive_45_Outputs.machine.coreElement.damper.stateSelect
drive_45_Outputs.machine.coreElement.damper.d
drive_45_Outputs.machine.coreElement.damper.useHeatPort
drive_45_Outputs.machine.coreElement.inertiaStator.flange_a.phi
drive_45_Outputs.machine.coreElement.inertiaStator.flange_a.tau
drive_45_Outputs.machine.coreElement.inertiaStator.flange_b.phi
drive_45_Outputs.machine.coreElement.inertiaStator.flange_b.tau
drive_45_Outputs.machine.coreElement.inertiaStator.J
drive_45_Outputs.machine.coreElement.inertiaStator.stateSelect
drive_45_Outputs.machine.coreElement.inertiaStator.phi
drive_45_Outputs.machine.coreElement.inertiaStator.der(phi)
drive_45_Outputs.machine.coreElement.inertiaStator.w
drive_45_Outputs.machine.coreElement.inertiaStator.der(w)
drive_45_Outputs.machine.coreElement.inertiaStator.a
drive_45_Outputs.machine.coreElement.fixed.phi0
drive_45_Outputs.machine.coreElement.fixed.flange.phi
drive_45_Outputs.machine.coreElement.fixed.flange.tau
drive_45_Outputs.machine.coreElement.innerTorque
drive_45_Outputs.machine.coreElement.airgapTorque
drive_45_Outputs.machine.coreElement.overallInductance.v
drive_45_Outputs.machine.coreElement.overallInductance.i
drive_45_Outputs.machine.coreElement.overallInductance.der(i)
drive_45_Outputs.machine.coreElement.overallInductance.L
drive_45_Outputs.machine.coreElement.internalSupport.phi
drive_45_Outputs.machine.coreElement.internalSupport.tau
drive_45_Outputs.machine.signChange.k
drive_45_Outputs.machine.powerSensor.pv.i
drive_45_Outputs.machine.powerSensor.nv.v
drive_45_Outputs.machine.powerSensor.nv.i
drive_45_Outputs.machine.powerSensor.voltageSensor.p.i
drive_45_Outputs.machine.powerSensor.voltageSensor.n.v
drive_45_Outputs.machine.powerSensor.voltageSensor.n.i
drive_45_Outputs.machine.angleSensorIdeal.flange_a.phi
drive_45_Outputs.machine.angleSensorIdeal.flange_a.tau
drive_45_Outputs.machine.angleSensorIdeal.flange_b.tau
drive_45_Outputs.machine.speedSensor.flange_a.phi
drive_45_Outputs.machine.speedSensor.flange_a.tau
drive_45_Outputs.machine.speedSensor.flange_b.tau
drive_45_Outputs.machine.fixed.phi0
drive_45_Outputs.machine.fixed.flange.phi
drive_45_Outputs.machine.fixed.flange.tau
drive_45_Outputs.machine.internalSupport.phi
drive_45_Outputs.machine.internalSupport.tau
drive_45_Outputs.ground.p.v
drive_45_Outputs.ground.p.i
drive_45_Outputs.speedDependentTorque.useSupport
drive_45_Outputs.speedDependentTorque.flange.tau
drive_45_Outputs.speedDependentTorque.phi_support
drive_45_Outputs.speedDependentTorque.tau
drive_45_Outputs.inertia.flange_b.tau
drive_45_Outputs.inertia.J
drive_45_Outputs.inertia.stateSelect
drive_45_Outputs.inertia.phi
drive_45_Outputs.multiSensorLoad.flange_a.tau
drive_45_Outputs.multiSensorLoad.flange_b.tau
drive_45_Outputs.multiSensorLoad.power
drive_45_Outputs.multiSensorLoad.tau
drive_45_Outputs.pin_p.v
drive_45_Outputs.pin_p.i
drive_45_Outputs.pin_n.v
drive_45_Outputs.tau
drive_45_Outputs.tau1
constantVoltage1.V
constantVoltage1.v
constantVoltage1.p.v
constantVoltage1.n.v
const.k
const.y
firstOrder1.k
firstOrder1.T
firstOrder1.initType
firstOrder1.y_start
firstOrder1.y
firstOrder1.der(y)
drive.inverter.voltageDC.bldcBus.voltageDC
drive_45_Outputs.inverter.voltageDC.bldcBus.voltageDC
drive.controller.bldcBus.voltageDC
drive.controller.hallSensorOutput.electricDriveBus.voltageDC
drive.inverter.bldcBus.voltageDC
drive.inverter.currentAC.bldcBus.voltageDC
drive.inverter.currentDC.bldcBus.voltageDC
drive.machine.airGapTorque.bldcBus.voltageDC
drive.machine.angleSensor.bldcBus.voltageDC
drive.machine.angleSensor.hallSensorOutput.electricDriveBus.voltageDC
drive.machine.bldcBus.voltageDC
drive.machine.electricMachinePower.bldcBus.voltageDC
drive.machine.innerMachinePower.bldcBus.voltageDC
drive.machine.innerTorque.bldcBus.voltageDC
drive.machine.machineAngle.bldcBus.voltageDC
drive.machine.machineSpeed.bldcBus.voltageDC
drive.modulation.bldcBus.voltageDC
drive.modulation.dutyCycle.bldcBus.voltageDC
drive_45_Outputs.controller.bldcBus.voltageDC
drive_45_Outputs.inverter.bldcBus.voltageDC
drive_45_Outputs.inverter.currentAC_Averaged.bldcBus.voltageDC
drive_45_Outputs.inverter.currentDC.bldcBus.voltageDC
drive_45_Outputs.machine.airGapTorque.bldcBus.voltageDC
drive_45_Outputs.machine.bldcBus.voltageDC
drive_45_Outputs.machine.electricMachinePower.bldcBus.voltageDC
drive_45_Outputs.machine.innerMachinePower.bldcBus.voltageDC
drive_45_Outputs.machine.innerTorque.bldcBus.voltageDC
drive_45_Outputs.machine.machineAngle.bldcBus.voltageDC
drive_45_Outputs.machine.machineSpeed.bldcBus.voltageDC
drive_45_Outputs.modulation.bldcBus.voltageDC
CPUtime
EventCounter

double initialValue(1120,6)
  0   10000                       0                       0                
  6   256   # rotateCW.startTime
  0       1                       0                       0                
  6   257   # rotateCW.startValue
  0       3                       0                       0                
  6   258   # drive.controller.m
  0       1                       0                       0                
  6   257   # drive.controller.useDirectionInput
  0       0                       0                       0                
  6   257   # drive.controller.rotateCW
  0       3                       0                       0                
  6   258   # drive.controller.coreElement.m
  0       1                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[1, 1]
  0       0                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[1, 2]
  0       0                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[1, 3]
  0       1                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[2, 1]
  0       1                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[2, 2]
  0       0                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[2, 3]
  0       1                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[3, 1]
  0       1                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[3, 2]
  0       1                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[3, 3]
  0       0                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[4, 1]
  0       1                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[4, 2]
  0       1                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[4, 3]
  0       0                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[5, 1]
  0       0                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[5, 2]
  0       1                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[5, 3]
  0       0                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[6, 1]
  0       0                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[6, 2]
  0       0                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[6, 3]
  0       1                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[7, 1]
  0       0                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[7, 2]
  0       1                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[7, 3]
  0       0                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[8, 1]
  0       1                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[8, 2]
  0       0                       0                       0                
  6   257   # drive.controller.coreElement.inputTable[8, 3]
  0       1                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[1, 1]
  0       2                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[1, 2]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[1, 3]
  0       1                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[2, 1]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[2, 2]
  0       2                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[2, 3]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[3, 1]
  0       1                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[3, 2]
  0       2                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[3, 3]
  0       2                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[4, 1]
  0       1                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[4, 2]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[4, 3]
  0       2                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[5, 1]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[5, 2]
  0       1                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[5, 3]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[6, 1]
  0       2                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[6, 2]
  0       1                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[6, 3]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[7, 1]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[7, 2]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[7, 3]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[8, 1]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[8, 2]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCW[8, 3]
  0       2                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[1, 1]
  0       1                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[1, 2]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[1, 3]
  0       2                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[2, 1]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[2, 2]
  0       1                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[2, 3]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[3, 1]
  0       2                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[3, 2]
  0       1                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[3, 3]
  0       1                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[4, 1]
  0       2                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[4, 2]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[4, 3]
  0       1                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[5, 1]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[5, 2]
  0       2                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[5, 3]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[6, 1]
  0       1                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[6, 2]
  0       2                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[6, 3]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[7, 1]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[7, 2]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[7, 3]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[8, 1]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[8, 2]
  0       4                       1                       4                
  6   258   # drive.controller.coreElement.outputTableCCW[8, 3]
  0       0                       0                       0                
  6   322   # drive.controller.coreElement.activeRow
  0       0                       0                       0                
  6  1345   # drive.controller.coreElement.same
  0       0                       0                       0                
  6   321   # drive.controller.coreElement.rotateCW
  0       0                       0                       0                
  6   321   # drive.controller.coreElement.u[1]
  0       0                       0                       0                
  6   321   # drive.controller.coreElement.u[2]
  0       0                       0                       0                
  6   321   # drive.controller.coreElement.u[3]
  0       1                       1                       4                
  6   322   # drive.controller.coreElement.halfBridgeOutput[1]
  0       1                       1                       4                
  6   322   # drive.controller.coreElement.halfBridgeOutput[2]
  0       1                       1                       4                
  6   322   # drive.controller.coreElement.halfBridgeOutput[3]
  0       3                       0                       0                
  6   258   # drive.controller.hallSensorOutput.m
  0       3                       0                       0                
  6   258   # drive.controller.data.m
  0       1                       0                       0                
  6   257   # drive.controller.data.inputTable[1, 1]
  0       0                       0                       0                
  6   257   # drive.controller.data.inputTable[1, 2]
  0       0                       0                       0                
  6   257   # drive.controller.data.inputTable[1, 3]
  0       1                       0                       0                
  6   257   # drive.controller.data.inputTable[2, 1]
  0       1                       0                       0                
  6   257   # drive.controller.data.inputTable[2, 2]
  0       0                       0                       0                
  6   257   # drive.controller.data.inputTable[2, 3]
  0       1                       0                       0                
  6   257   # drive.controller.data.inputTable[3, 1]
  0       1                       0                       0                
  6   257   # drive.controller.data.inputTable[3, 2]
  0       1                       0                       0                
  6   257   # drive.controller.data.inputTable[3, 3]
  0       0                       0                       0                
  6   257   # drive.controller.data.inputTable[4, 1]
  0       1                       0                       0                
  6   257   # drive.controller.data.inputTable[4, 2]
  0       1                       0                       0                
  6   257   # drive.controller.data.inputTable[4, 3]
  0       0                       0                       0                
  6   257   # drive.controller.data.inputTable[5, 1]
  0       0                       0                       0                
  6   257   # drive.controller.data.inputTable[5, 2]
  0       1                       0                       0                
  6   257   # drive.controller.data.inputTable[5, 3]
  0       0                       0                       0                
  6   257   # drive.controller.data.inputTable[6, 1]
  0       0                       0                       0                
  6   257   # drive.controller.data.inputTable[6, 2]
  0       0                       0                       0                
  6   257   # drive.controller.data.inputTable[6, 3]
  0       1                       0                       0                
  6   257   # drive.controller.data.inputTable[7, 1]
  0       0                       0                       0                
  6   257   # drive.controller.data.inputTable[7, 2]
  0       1                       0                       0                
  6   257   # drive.controller.data.inputTable[7, 3]
  0       0                       0                       0                
  6   257   # drive.controller.data.inputTable[8, 1]
  0       1                       0                       0                
  6   257   # drive.controller.data.inputTable[8, 2]
  0       0                       0                       0                
  6   257   # drive.controller.data.inputTable[8, 3]
  0       1                       1                       4                
  6   258   # drive.controller.data.outputTableCW[1, 1]
  0       2                       1                       4                
  6   258   # drive.controller.data.outputTableCW[1, 2]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCW[1, 3]
  0       1                       1                       4                
  6   258   # drive.controller.data.outputTableCW[2, 1]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCW[2, 2]
  0       2                       1                       4                
  6   258   # drive.controller.data.outputTableCW[2, 3]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCW[3, 1]
  0       1                       1                       4                
  6   258   # drive.controller.data.outputTableCW[3, 2]
  0       2                       1                       4                
  6   258   # drive.controller.data.outputTableCW[3, 3]
  0       2                       1                       4                
  6   258   # drive.controller.data.outputTableCW[4, 1]
  0       1                       1                       4                
  6   258   # drive.controller.data.outputTableCW[4, 2]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCW[4, 3]
  0       2                       1                       4                
  6   258   # drive.controller.data.outputTableCW[5, 1]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCW[5, 2]
  0       1                       1                       4                
  6   258   # drive.controller.data.outputTableCW[5, 3]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCW[6, 1]
  0       2                       1                       4                
  6   258   # drive.controller.data.outputTableCW[6, 2]
  0       1                       1                       4                
  6   258   # drive.controller.data.outputTableCW[6, 3]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCW[7, 1]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCW[7, 2]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCW[7, 3]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCW[8, 1]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCW[8, 2]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCW[8, 3]
  0       2                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[1, 1]
  0       1                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[1, 2]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[1, 3]
  0       2                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[2, 1]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[2, 2]
  0       1                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[2, 3]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[3, 1]
  0       2                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[3, 2]
  0       1                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[3, 3]
  0       1                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[4, 1]
  0       2                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[4, 2]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[4, 3]
  0       1                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[5, 1]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[5, 2]
  0       2                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[5, 3]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[6, 1]
  0       1                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[6, 2]
  0       2                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[6, 3]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[7, 1]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[7, 2]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[7, 3]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[8, 1]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[8, 2]
  0       4                       1                       4                
  6   258   # drive.controller.data.outputTableCCW[8, 3]
  0       3                       0                       0                
  6   258   # drive.modulation.m
  0       3                       0                       0                
  6   258   # drive.modulation.coreElement.m
  0       0                       0                       0                
  6   321   # drive.modulation.y[1, 1]
  0       0                       0                       0                
  6   321   # drive.modulation.y[1, 2]
  0       0                       0                       0                
  6   321   # drive.modulation.y[2, 1]
  0       0                       0                       0                
  6   321   # drive.modulation.y[2, 2]
  0       0                       0                       0                
  6   321   # drive.modulation.y[3, 1]
  0       0                       0                       0                
  6   321   # drive.modulation.y[3, 2]
  0       3                       0                       0                
  6   258   # drive.inverter.m
  0      60                       0                       0                
  6   260   # drive.inverter.pin_p.v
  0       0                       0                       0                
  6   260   # drive.inverter.pin_n.v
  0       0                       0                       0                
  6   388   # drive.inverter.pin_n.i
  0       3                       0                       0                
  6   258   # drive.inverter.coreElement.m
  0       0                       0                       0                
  6   257   # drive.inverter.coreElement.bidirectional
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.Ron
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.Goff
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.inverter.coreElement.star_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.inverter.coreElement.star_p.plug_p.m
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.star_p.plug_p.pin[1].v
  0       0                       0                       0                
  6   388   # drive.inverter.coreElement.star_p.plug_p.pin[1].i
  0       0                       0                       0                
  6   388   # drive.inverter.coreElement.star_p.plug_p.pin[2].i
  0       0                       0                       0                
  6   388   # drive.inverter.coreElement.star_p.plug_p.pin[3].i
  0       0                       0                       0                
  6   388   # drive.inverter.coreElement.star_p.pin_n.i
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.inverter.coreElement.star_n.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.inverter.coreElement.star_n.plug_p.m
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.star_n.plug_p.pin[1].v
  0       0                       0                       0                
  6   388   # drive.inverter.coreElement.star_n.plug_p.pin[1].i
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.star_n.plug_p.pin[2].v
  0       0                       0                       0                
  6   388   # drive.inverter.coreElement.star_n.plug_p.pin[2].i
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.star_n.plug_p.pin[3].v
  0       0                       0                       0                
  6   388   # drive.inverter.coreElement.star_n.plug_p.pin[3].i
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.star_n.pin_n.v
  0       0                       0                       0                
  6   388   # drive.inverter.coreElement.star_n.pin_n.i
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.inverter.coreElement.upperSwitch.m
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperSwitch.v[1]
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperSwitch.v[2]
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperSwitch.v[3]
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperSwitch.i[1]
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperSwitch.i[2]
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperSwitch.i[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.inverter.coreElement.upperSwitch.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.inverter.coreElement.upperSwitch.plug_n.m
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.Ron[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.Ron[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.Ron[3]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.Goff[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.Goff[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.Goff[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.inverter.coreElement.upperSwitch.mh
  0       0                       0                       0                
  6   769   # drive.inverter.coreElement.upperSwitch.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.T[3]
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].v
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].Ron
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].Goff
  0       0                       0                       0                
  6   769   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].T
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].T_heatPort
  0       0                       0                       0                
  6  1345   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].off
  0       0                       0                       0                
  6  1280   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].s
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].unitVoltage
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[1].unitCurrent
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].v
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].Ron
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].Goff
  0       0                       0                       0                
  6   769   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].T
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].T_heatPort
  0       0                       0                       0                
  6  1345   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].off
  0       0                       0                       0                
  6  1280   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].s
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].unitVoltage
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[2].unitCurrent
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].v
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].Ron
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].Goff
  0       0                       0                       0                
  6   769   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].T
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].T_heatPort
  0       0                       0                       0                
  6  1345   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].off
  0       0                       0                       0                
  6  1280   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].s
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].unitVoltage
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.upperSwitch.idealClosingSwitch[3].unitCurrent
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.inverter.coreElement.lowerSwitch.m
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.lowerSwitch.i[1]
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.lowerSwitch.i[2]
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.lowerSwitch.i[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.inverter.coreElement.lowerSwitch.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.inverter.coreElement.lowerSwitch.plug_n.m
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.lowerSwitch.plug_n.pin[1].v
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.lowerSwitch.plug_n.pin[2].v
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.lowerSwitch.plug_n.pin[3].v
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.Ron[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.Ron[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.Ron[3]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.Goff[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.Goff[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.Goff[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.inverter.coreElement.lowerSwitch.mh
  0       0                       0                       0                
  6   769   # drive.inverter.coreElement.lowerSwitch.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.T[3]
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].n.v
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].Ron
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].Goff
  0       0                       0                       0                
  6   769   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].T
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].T_heatPort
  0       0                       0                       0                
  6  1345   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].off
  0       0                       0                       0                
  6  1280   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].s
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].unitVoltage
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[1].unitCurrent
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].n.v
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].Ron
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].Goff
  0       0                       0                       0                
  6   769   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].T
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].T_heatPort
  0       0                       0                       0                
  6  1345   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].off
  0       0                       0                       0                
  6  1280   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].s
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].unitVoltage
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[2].unitCurrent
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].n.v
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].Ron
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].Goff
  0       0                       0                       0                
  6   769   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].T
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].T_heatPort
  0       0                       0                       0                
  6  1345   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].off
  0       0                       0                       0                
  6  1280   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].s
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].unitVoltage
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.lowerSwitch.idealClosingSwitch[3].unitCurrent
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.inverter.coreElement.upperDiode.m
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperDiode.v[1]
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperDiode.v[2]
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperDiode.v[3]
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperDiode.i[1]
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperDiode.i[2]
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperDiode.i[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.inverter.coreElement.upperDiode.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.inverter.coreElement.upperDiode.plug_n.m
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.Ron[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.Ron[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.Ron[3]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.Goff[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.Goff[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.Goff[3]
  0       0                       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.Vknee[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.Vknee[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.Vknee[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.inverter.coreElement.upperDiode.mh
  0       0                       0                       0                
  6   769   # drive.inverter.coreElement.upperDiode.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.T[3]
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[1].v
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[1].Ron
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[1].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[1].Vknee
  0       0                       0                       0                
  6   769   # drive.inverter.coreElement.upperDiode.idealDiode[1].useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[1].T
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[1].LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[1].T_heatPort
  0       1                       0                       0                
  6   353   # drive.inverter.coreElement.upperDiode.idealDiode[1].off
  0       0                       0                       0                
  6  1280   # drive.inverter.coreElement.upperDiode.idealDiode[1].s
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.upperDiode.idealDiode[1].unitVoltage
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.upperDiode.idealDiode[1].unitCurrent
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[2].v
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[2].Ron
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[2].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[2].Vknee
  0       0                       0                       0                
  6   769   # drive.inverter.coreElement.upperDiode.idealDiode[2].useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[2].T
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[2].LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[2].T_heatPort
  0       1                       0                       0                
  6   353   # drive.inverter.coreElement.upperDiode.idealDiode[2].off
  0       0                       0                       0                
  6  1280   # drive.inverter.coreElement.upperDiode.idealDiode[2].s
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.upperDiode.idealDiode[2].unitVoltage
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.upperDiode.idealDiode[2].unitCurrent
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[3].v
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[3].Ron
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[3].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[3].Vknee
  0       0                       0                       0                
  6   769   # drive.inverter.coreElement.upperDiode.idealDiode[3].useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[3].T
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[3].LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.upperDiode.idealDiode[3].T_heatPort
  0       1                       0                       0                
  6   353   # drive.inverter.coreElement.upperDiode.idealDiode[3].off
  0       0                       0                       0                
  6  1280   # drive.inverter.coreElement.upperDiode.idealDiode[3].s
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.upperDiode.idealDiode[3].unitVoltage
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.upperDiode.idealDiode[3].unitCurrent
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.inverter.coreElement.lowerDiode.m
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.lowerDiode.i[1]
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.lowerDiode.i[2]
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.lowerDiode.i[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.inverter.coreElement.lowerDiode.plug_p.m
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.lowerDiode.plug_p.pin[1].v
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.lowerDiode.plug_p.pin[2].v
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.lowerDiode.plug_p.pin[3].v
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.inverter.coreElement.lowerDiode.plug_n.m
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.Ron[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.Ron[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.Ron[3]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.Goff[1]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.Goff[2]
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.Goff[3]
  0       0                       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.Vknee[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.Vknee[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.Vknee[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.inverter.coreElement.lowerDiode.mh
  0       0                       0                       0                
  6   769   # drive.inverter.coreElement.lowerDiode.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.T[3]
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.lowerDiode.idealDiode[1].p.v
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[1].Ron
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[1].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[1].Vknee
  0       0                       0                       0                
  6   769   # drive.inverter.coreElement.lowerDiode.idealDiode[1].useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[1].T
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[1].LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[1].T_heatPort
  0       1                       0                       0                
  6   353   # drive.inverter.coreElement.lowerDiode.idealDiode[1].off
  0       0                       0                       0                
  6  1280   # drive.inverter.coreElement.lowerDiode.idealDiode[1].s
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.lowerDiode.idealDiode[1].unitVoltage
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.lowerDiode.idealDiode[1].unitCurrent
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.lowerDiode.idealDiode[2].p.v
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[2].Ron
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[2].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[2].Vknee
  0       0                       0                       0                
  6   769   # drive.inverter.coreElement.lowerDiode.idealDiode[2].useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[2].T
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[2].LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[2].T_heatPort
  0       1                       0                       0                
  6   353   # drive.inverter.coreElement.lowerDiode.idealDiode[2].off
  0       0                       0                       0                
  6  1280   # drive.inverter.coreElement.lowerDiode.idealDiode[2].s
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.lowerDiode.idealDiode[2].unitVoltage
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.lowerDiode.idealDiode[2].unitCurrent
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.lowerDiode.idealDiode[3].p.v
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[3].Ron
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[3].Goff
  0       0                       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[3].Vknee
  0       0                       0                       0                
  6   769   # drive.inverter.coreElement.lowerDiode.idealDiode[3].useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[3].T
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[3].LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.inverter.coreElement.lowerDiode.idealDiode[3].T_heatPort
  0       1                       0                       0                
  6   353   # drive.inverter.coreElement.lowerDiode.idealDiode[3].off
  0       0                       0                       0                
  6  1280   # drive.inverter.coreElement.lowerDiode.idealDiode[3].s
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.lowerDiode.idealDiode[3].unitVoltage
  0       1                       0                       0                
  6   768   # drive.inverter.coreElement.lowerDiode.idealDiode[3].unitCurrent
  0      60                       0                       0                
  6   256   # drive.inverter.coreElement.idealBuckConverter.v1
  0      60                       0                       0                
  6   260   # drive.inverter.coreElement.idealBuckConverter.p1.v
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.idealBuckConverter.n1.v
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.idealBuckConverter.n2.v
  0       0                       0                       1                
  6   256   # drive.inverter.coreElement.idealBuckConverter.dutyCycle
  0      60                       0                       0                
  6   260   # drive.inverter.coreElement.pin_p.v
  0       0                       0                       0                
  6   260   # drive.inverter.coreElement.pin_n.v
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.inverter.coreElement.plug.m
  0       3                       0                       0                
  6   258   # drive.inverter.coreElement.rotationSwitch.m
  0       0                       0                       0                
  6   257   # drive.inverter.coreElement.rotationSwitch.bidirectional
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.uniOrBidirectional.y
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.uniOrBidirectional.u1
  0       1                       0                       0                
  6   256   # drive.inverter.coreElement.uniOrBidirectional.u2
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.uniOrBidirectional.y1
  0       1                       0                       0                
  6   256   # drive.inverter.coreElement.uniOrBidirectional.y2
  0       1                       0                       0                
  6   256   # drive.inverter.coreElement.uniOrBidirectional.k
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.uniOrBidirectional.y0
  0       1                       0                       0                
  6   256   # drive.inverter.coreElement.uniOrBidirectional.gradient.k
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.uniOrBidirectional.add.u1
  0       1                       0                       0                
  6   256   # drive.inverter.coreElement.uniOrBidirectional.add.k1
  0       1                       0                       0                
  6   256   # drive.inverter.coreElement.uniOrBidirectional.add.k2
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.uniOrBidirectional.offset.k
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.uniOrBidirectional.offset.y
  0       1                       0                       0                
  6   256   # drive.inverter.coreElement.uniOrBidirectional.limiter.uMax
  0       0                       0                       0                
  6   256   # drive.inverter.coreElement.uniOrBidirectional.limiter.uMin
  0       0                       0                       0                
  6   257   # drive.inverter.coreElement.uniOrBidirectional.limiter.strict
  0       2                       1                       4                
  6   258   # drive.inverter.coreElement.uniOrBidirectional.limiter.homotopyType
  0       0                       0                       0                
  6   257   # drive.inverter.coreElement.abs.generateEvent
  0       3                       0                       0                
  6   258   # drive.inverter.data.m
  0       0                       0                       0                
  6   257   # drive.inverter.data.bidirectional
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.data.Ron
  0  1.0000000000000001E-05       0                 1.0000000000000000E+100
  6   256   # drive.inverter.data.Goff
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.inverter.plug.m
  0       0                       0                       0                
  6   260   # drive.inverter.plug.pin[1].v
  0       0                       0                       0                
  6   260   # drive.inverter.plug.pin[2].v
  0       0                       0                       0                
  6   260   # drive.inverter.plug.pin[3].v
  0      60                       0                       0                
  6   260   # drive.inverter.currentSensorDC.p.v
  0      60                       0                       0                
  6   260   # drive.inverter.currentSensorDC.n.v
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.inverter.currentSensorAC.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.inverter.currentSensorAC.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.inverter.currentSensorAC.plug_n.m
  0       3                       0                       0                
  6   258   # drive.inverter.currentAC.m
  0      60                       0                       0                
  6   260   # drive.inverter.voltageSensorDC.p.v
  0       0                       0                       0                
  6   388   # drive.inverter.voltageSensorDC.p.i
  0       0                       0                       0                
  6   260   # drive.inverter.voltageSensorDC.n.v
  0       0                       0                       0                
  6   388   # drive.inverter.voltageSensorDC.n.i
  0      60                       0                       0                
  6   256   # drive.inverter.voltageSensorDC.v
  0      60                       0                       0                
  6   256   # drive.inverter.voltageDC.u
  0       0                       0                       0                
  6   256   # drive.multiSensorMotor.power
  0       3                       0                       0                
  6   258   # drive.machine.data.m
  0  1.5500000000000000E-02       0                       0                
  6   256   # drive.machine.data.Rt
  0       2                       0                       0                
  6   258   # drive.machine.data.p
  0       1                       0                       0                
  6   257   # drive.machine.data.useL
  0       1                       0                       0                
  6   257   # drive.machine.data.useLt
  0  3.9999999999999998E-06       0                       0                
  6   256   # drive.machine.data.Lt
  0  1.0000000000000001E-15       0                       0                
  6   256   # drive.machine.data.L
  0  1.0000000000000001E-15       0                       0                
  6   256   # drive.machine.data.M
  0       0                       0                       0                
  6   256   # drive.machine.data.Ls_sigma
  0       1                       1                       2                
  6   258   # drive.machine.data.fluxSource
  0  1.3420000000000001E-01       0                       0                
  6   256   # drive.machine.data.k_tau
  0      71                       0                       0                
  6   256   # drive.machine.data.k_speed
  0  1.0000000000000001E-15       0                       0                
  6   256   # drive.machine.data.Jr
  0  1.0000000000000001E-15       0                       0                
  6   256   # drive.machine.data.Js
  0  9.8000000000000007E+00       0                 1.0000000000000000E+100
  6   256   # drive.machine.data.I_0
  0    3550                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # drive.machine.data.w_0
  0      50                       0                       0                
  6   256   # drive.machine.data.u_s_nom
  0  1.7780000000000001E+02       0                       0                
  6   256   # drive.machine.data.i_s_nom
  0  2.3853000000000002E+01       0                       0                
  6   256   # drive.machine.data.tau_nom
  0  3.5238197597765509E+02       0                       0                
  6   256   # drive.machine.data.w_nom
  0  8.4053672729950067E+03       0                       0                
  6   256   # drive.machine.data.P_nom
  0  1.3420000000000001E-01       0                       0                
  6   256   # drive.machine.data.kDC
  0  3.7046760563380290E-04       0                       0                
  6   256   # drive.machine.data.b
  0  7.7499999999999999E-03       0                       0                
  6   256   # drive.machine.data.Rs
  0  1.9999999999999999E-06       0                       0                
  6   256   # drive.machine.data.Ls
  0  2.0943951023931953E+00  9.9999999999999997E-61  3.1415926535897931E+00
  6   256   # drive.machine.data.maxEMF_constant
  0  3.6651914291880918E+00       0                       0                
  6   256   # drive.machine.data.maxEMF_start[1]
  0  5.7595865315812880E+00       0                       0                
  6   256   # drive.machine.data.maxEMF_start[2]
  0  7.8539816339744828E+00       0                       0                
  6   256   # drive.machine.data.maxEMF_start[3]
  0       0                       0                       0                
  6   257   # drive.machine.useSupport
  0       0                       0                       0                
  6   257   # drive.machine.useThermalPort
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.plug_p.m
  0       0                       0                       0                
  6   256   # drive.machine.powerBalance.electricMachinePower
  0       0                       0                       0                
  6   256   # drive.machine.powerBalance.innerMachinePower
  0       0                       0                       0                
  6   256   # drive.machine.powerBalance.statorInertiaPower
  0       0                       0                       0                
  6   256   # drive.machine.powerBalance.rotorInertiaPower
  0       0                       0                       0                
  6   256   # drive.machine.powerBalance.totalLossPower
  0       0                       0                       0                
  6   256   # drive.machine.powerBalance.statorWindingLossPower
  0       0                       0                       0                
  6   256   # drive.machine.powerBalance.frictionLossPower
  0       3                       0                       0                
  6   258   # drive.machine.angleSensor.m
  0       2                       0                       0                
  6   258   # drive.machine.angleSensor.p
  0       0                       0                       0                
  6   388   # drive.machine.angleSensor.flange.tau
  0       0                       0                       0                
  6   260   # drive.machine.angleSensor.support.phi
  0       0                       0                       0                
  6   388   # drive.machine.angleSensor.support.tau
  0       3                       0                       0                
  6   258   # drive.machine.angleSensor.coreElement.m
  0  5.2359877559829882E-01       0                 1.0000000000000000E+100
  6   256   # drive.machine.angleSensor.coreElement.pulseStart[1]
  0  1.5707963267948966E+00       0                 1.0000000000000000E+100
  6   256   # drive.machine.angleSensor.coreElement.pulseStart[2]
  0  2.6179938779914940E+00       0                 1.0000000000000000E+100
  6   256   # drive.machine.angleSensor.coreElement.pulseStart[3]
  0  3.1415926535897931E+00       0                 1.0000000000000000E+100
  6   256   # drive.machine.angleSensor.coreElement.pulseWidth
  0       2                       0                       0                
  6   258   # drive.machine.angleSensor.coreElement.p
  0  3.6651914291880918E+00       0                       0                
  6   256   # drive.machine.angleSensor.coreElement.pulseEnd[1]
  0  4.7123889803846897E+00       0                       0                
  6   256   # drive.machine.angleSensor.coreElement.pulseEnd[2]
  0  5.7595865315812871E+00       0                       0                
  6   256   # drive.machine.angleSensor.coreElement.pulseEnd[3]
  0  5.2359877559829882E-01       0                 1.0000000000000000E+100
  6   256   # drive.machine.angleSensor.coreElement.pulseStartLim[1]
  0  1.5707963267948966E+00       0                 1.0000000000000000E+100
  6   256   # drive.machine.angleSensor.coreElement.pulseStartLim[2]
  0  2.6179938779914940E+00       0                 1.0000000000000000E+100
  6   256   # drive.machine.angleSensor.coreElement.pulseStartLim[3]
  0  3.6651914291880918E+00       0                 1.0000000000000000E+100
  6   256   # drive.machine.angleSensor.coreElement.pulseEndLim[1]
  0  4.7123889803846897E+00       0                 1.0000000000000000E+100
  6   256   # drive.machine.angleSensor.coreElement.pulseEndLim[2]
  0  5.7595865315812871E+00       0                 1.0000000000000000E+100
  6   256   # drive.machine.angleSensor.coreElement.pulseEndLim[3]
  0       0                       0                       0                
  6   256   # drive.machine.angleSensor.coreElement.electricAngle
  0       0                       0                       0                
  6   256   # drive.machine.angleSensor.coreElement.electricAngleLim
  0       0                       0                       0                
  6   388   # drive.machine.angleSensor.coreElement.flange.tau
  0       0                       0                       0                
  6   260   # drive.machine.angleSensor.coreElement.support.phi
  0       0                       0                       0                
  6   388   # drive.machine.angleSensor.coreElement.support.tau
  0       3                       0                       0                
  6   258   # drive.machine.angleSensor.pulseConfiguration.m
  0  5.2359877559829882E-01       0                 1.0000000000000000E+100
  6   256   # drive.machine.angleSensor.pulseConfiguration.pulseStart[1]
  0  1.5707963267948966E+00       0                 1.0000000000000000E+100
  6   256   # drive.machine.angleSensor.pulseConfiguration.pulseStart[2]
  0  2.6179938779914940E+00       0                 1.0000000000000000E+100
  6   256   # drive.machine.angleSensor.pulseConfiguration.pulseStart[3]
  0  3.1415926535897931E+00       0                 1.0000000000000000E+100
  6   256   # drive.machine.angleSensor.pulseConfiguration.pulseWidth
  0       3                       0                       0                
  6   258   # drive.machine.angleSensor.hallSensorOutput.m
  0       3                       0                       0                
  6   258   # drive.machine.coreElement.m
  0  7.7499999999999999E-03       0                       0                
  6   256   # drive.machine.coreElement.Rs
  0  1.9999999999999999E-06       0                       0                
  6   256   # drive.machine.coreElement.Ls
  0       1                       1                       2                
  6   258   # drive.machine.coreElement.fluxSource
  0  1.3420000000000001E-01       0                       0                
  6   256   # drive.machine.coreElement.k_tau
  0      71                       0                       0                
  6   256   # drive.machine.coreElement.k_speed
  0       2                       0                       0                
  6   258   # drive.machine.coreElement.p
  0  1.0000000000000001E-15       0                       0                
  6   256   # drive.machine.coreElement.Jr
  0  1.0000000000000001E-15       0                       0                
  6   256   # drive.machine.coreElement.Js
  0  3.7046760563380290E-04       0                       0                
  6   256   # drive.machine.coreElement.b
  0       0                       0                       0                
  6   257   # drive.machine.coreElement.useSupport
  0       0                       0                       0                
  6   257   # drive.machine.coreElement.useThermalPort
  0  2.0943951023931953E+00       0                       0                
  6   256   # drive.machine.coreElement.maxEMF_constant
  0  3.6651914291880918E+00       0                       0                
  6   256   # drive.machine.coreElement.maxEMF_start[1]
  0  5.7595865315812880E+00       0                       0                
  6   256   # drive.machine.coreElement.maxEMF_start[2]
  0  7.8539816339744828E+00       0                       0                
  6   256   # drive.machine.coreElement.maxEMF_start[3]
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.v[1]
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.v[2]
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.v[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.coreElement.plug_sp.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.coreElement.plug_sn.m
  0       0                       0                       0                
  6   260   # drive.machine.coreElement.plug_sn.pin[1].v
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.machine.coreElement.resistor.m
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.resistor.v[1]
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.resistor.v[2]
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.resistor.v[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.coreElement.resistor.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.coreElement.resistor.plug_n.m
  0       0                       0                       0                
  6   260   # drive.machine.coreElement.resistor.plug_n.pin[1].v
  0       0                       0                       0                
  6   260   # drive.machine.coreElement.resistor.plug_n.pin[2].v
  0       0                       0                       0                
  6   260   # drive.machine.coreElement.resistor.plug_n.pin[3].v
  0  7.7499999999999999E-03       0                       0                
  6   256   # drive.machine.coreElement.resistor.R[1]
  0  7.7499999999999999E-03       0                       0                
  6   256   # drive.machine.coreElement.resistor.R[2]
  0  7.7499999999999999E-03       0                       0                
  6   256   # drive.machine.coreElement.resistor.R[3]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.resistor.T_ref[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.resistor.T_ref[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.resistor.T_ref[3]
  0  3.9699999999999996E-03       0                       0                
  6   256   # drive.machine.coreElement.resistor.alpha[1]
  0  3.9699999999999996E-03       0                       0                
  6   256   # drive.machine.coreElement.resistor.alpha[2]
  0  3.9699999999999996E-03       0                       0                
  6   256   # drive.machine.coreElement.resistor.alpha[3]
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.machine.coreElement.resistor.mh
  0       0                       0                       0                
  6   769   # drive.machine.coreElement.resistor.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.resistor.T[1]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.resistor.T[2]
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.resistor.T[3]
  0  7.7499999999999999E-03       0                       0                
  6   256   # drive.machine.coreElement.resistor.resistor[1].R
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.resistor.resistor[1].T_ref
  0  3.9699999999999996E-03       0                       0                
  6   256   # drive.machine.coreElement.resistor.resistor[1].alpha
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.resistor.resistor[1].v
  0       0                       0                       0                
  6   769   # drive.machine.coreElement.resistor.resistor[1].useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.resistor.resistor[1].T
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.resistor.resistor[1].LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.resistor.resistor[1].T_heatPort
  0  7.7499999999999999E-03       0                       0                
  6   256   # drive.machine.coreElement.resistor.resistor[1].R_actual
  0  7.7499999999999999E-03       0                       0                
  6   256   # drive.machine.coreElement.resistor.resistor[2].R
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.resistor.resistor[2].T_ref
  0  3.9699999999999996E-03       0                       0                
  6   256   # drive.machine.coreElement.resistor.resistor[2].alpha
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.resistor.resistor[2].v
  0       0                       0                       0                
  6   769   # drive.machine.coreElement.resistor.resistor[2].useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.resistor.resistor[2].T
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.resistor.resistor[2].LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.resistor.resistor[2].T_heatPort
  0  7.7499999999999999E-03       0                       0                
  6   256   # drive.machine.coreElement.resistor.resistor[2].R_actual
  0  7.7499999999999999E-03       0                       0                
  6   256   # drive.machine.coreElement.resistor.resistor[3].R
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.resistor.resistor[3].T_ref
  0  3.9699999999999996E-03       0                       0                
  6   256   # drive.machine.coreElement.resistor.resistor[3].alpha
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.resistor.resistor[3].v
  0       0                       0                       0                
  6   769   # drive.machine.coreElement.resistor.resistor[3].useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.resistor.resistor[3].T
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.resistor.resistor[3].LossPower
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.resistor.resistor[3].T_heatPort
  0  7.7499999999999999E-03       0                       0                
  6   256   # drive.machine.coreElement.resistor.resistor[3].R_actual
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.machine.coreElement.overallInductance.m
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.overallInductance.v[1]
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.overallInductance.v[2]
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.overallInductance.v[3]
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.coreElement.overallInductance.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.coreElement.overallInductance.plug_n.m
  0       0                       0                       0                
  6   260   # drive.machine.coreElement.overallInductance.plug_n.pin[1].v
  0       0                       0                       0                
  6   260   # drive.machine.coreElement.overallInductance.plug_n.pin[2].v
  0       0                       0                       0                
  6   260   # drive.machine.coreElement.overallInductance.plug_n.pin[3].v
  0  1.9999999999999999E-06       0                       0                
  6   256   # drive.machine.coreElement.overallInductance.L[1]
  0  1.9999999999999999E-06       0                       0                
  6   256   # drive.machine.coreElement.overallInductance.L[2]
  0  1.9999999999999999E-06       0                       0                
  6   256   # drive.machine.coreElement.overallInductance.L[3]
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.overallInductance.inductor[1].v
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.overallInductance.inductor[1].i
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.overallInductance.inductor[1].der(i)
  0  1.9999999999999999E-06       0                       0                
  6   256   # drive.machine.coreElement.overallInductance.inductor[1].L
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.overallInductance.inductor[2].v
 -1       0                       0                       0                
  2   280   # drive.machine.coreElement.overallInductance.inductor[2].i
  0       0                       0                       0                
  3   256   # drive.machine.coreElement.overallInductance.inductor[2].der(i)
  0  1.9999999999999999E-06       0                       0                
  6   256   # drive.machine.coreElement.overallInductance.inductor[2].L
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.overallInductance.inductor[3].v
 -1       0                       0                       0                
  2   280   # drive.machine.coreElement.overallInductance.inductor[3].i
  0       0                       0                       0                
  3   256   # drive.machine.coreElement.overallInductance.inductor[3].der(i)
  0  1.9999999999999999E-06       0                       0                
  6   256   # drive.machine.coreElement.overallInductance.inductor[3].L
  0       3                       0                       0                
  6   258   # drive.machine.coreElement.trapezoidalEMF.m
  0       1                       1                       2                
  6   258   # drive.machine.coreElement.trapezoidalEMF.fluxSource
  0  1.3420000000000001E-01       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.k_tau
  0      71                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.k_speed
  0       2                       0                       0                
  6   258   # drive.machine.coreElement.trapezoidalEMF.p
  0  3.3550000000000003E-02       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.V_backEMF_max
  0  2.0943951023931953E+00  9.9999999999999997E-61  3.1415926535897931E+00
  6   256   # drive.machine.coreElement.trapezoidalEMF.maxEMF_constant
  0  3.6651914291880918E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.maxEMF_start[1]
  0  5.7595865315812880E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.maxEMF_start[2]
  0  7.8539816339744828E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.maxEMF_start[3]
  0  1.0471975511965979E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.changingEMF
  0  1.9098593171027438E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.slopeEMF
  0  5.2700216763968785E-02       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.psi_max
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.theta
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.w_el
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.v[1]
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.v[2]
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.v[3]
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.f[1]
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.f[2]
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.f[3]
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.backEMF[1]
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.backEMF[2]
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.backEMF[3]
  0  3.6651914291880918E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.theta1[1]
  0  5.7595865315812880E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.theta1[2]
  0  1.5707963267948966E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.theta1[3]
  0  5.7595865315812871E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.theta2[1]
  0  1.5707963267948966E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.theta2[2]
  0  3.6651914291880914E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.theta2[3]
  0  5.2359877559829826E-01       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.theta3[1]
  0  2.6179938779914949E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.theta3[2]
  0  4.7123889803846897E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.theta3[3]
  0  2.6179938779914931E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.theta4[1]
  0  4.7123889803846897E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.theta4[2]
  0  5.2359877559829826E-01       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.theta4[3]
  0  3.6651914291880918E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[1, 1, 1]
  0  5.7595865315812880E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[1, 1, 2]
  0  1.5707963267948966E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[1, 1, 3]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[1, 2, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[1, 2, 2]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[1, 2, 3]
  0  5.7595865315812871E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[2, 1, 1]
  0  1.5707963267948966E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[2, 1, 2]
  0  3.6651914291880914E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[2, 1, 3]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[2, 2, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[2, 2, 2]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[2, 2, 3]
  0  5.2359877559829826E-01       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[3, 1, 1]
  0  2.6179938779914949E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[3, 1, 2]
  0  4.7123889803846897E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[3, 1, 3]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[3, 2, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[3, 2, 2]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[3, 2, 3]
  0  2.6179938779914931E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[4, 1, 1]
  0  4.7123889803846897E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[4, 1, 2]
  0  5.2359877559829826E-01       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[4, 1, 3]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[4, 2, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[4, 2, 2]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TM[4, 2, 3]
  0  5.2359877559829826E-01       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[1, 1, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[1, 1, 2]
  0  2.6179938779914931E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[1, 2, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[1, 2, 2]
  0  3.6651914291880918E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[1, 3, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[1, 3, 2]
  0  5.7595865315812871E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[1, 4, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[1, 4, 2]
  0  1.5707963267948966E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[2, 1, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[2, 1, 2]
  0  2.6179938779914949E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[2, 2, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[2, 2, 2]
  0  4.7123889803846897E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[2, 3, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[2, 3, 2]
  0  5.7595865315812880E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[2, 4, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[2, 4, 2]
  0  5.2359877559829826E-01       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[3, 1, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[3, 1, 2]
  0  1.5707963267948966E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[3, 2, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[3, 2, 2]
  0  3.6651914291880914E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[3, 3, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[3, 3, 2]
  0  4.7123889803846897E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[3, 4, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMS[3, 4, 2]
  0 -5.2359877559829959E-01       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE1[1, 1, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE1[1, 1, 2]
  0  5.2359877559829870E-01       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE1[2, 1, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE1[2, 1, 2]
  0 -5.2359877559829959E-01       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE1[3, 1, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE1[3, 1, 2]
  0  6.8067840827778845E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE6[1, 1, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE6[1, 1, 2]
  0  6.8067840827778863E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE6[2, 1, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE6[2, 1, 2]
  0  5.7595865315812880E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE6[3, 1, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE6[3, 1, 2]
  0 -5.2359877559829959E-01       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[1, 1, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[1, 1, 2]
  0  5.2359877559829826E-01       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[1, 2, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[1, 2, 2]
  0  2.6179938779914931E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[1, 3, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[1, 3, 2]
  0  3.6651914291880918E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[1, 4, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[1, 4, 2]
  0  5.7595865315812871E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[1, 5, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[1, 5, 2]
  0  6.8067840827778845E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[1, 6, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[1, 6, 2]
  0  5.2359877559829870E-01       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[2, 1, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[2, 1, 2]
  0  1.5707963267948966E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[2, 2, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[2, 2, 2]
  0  2.6179938779914949E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[2, 3, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[2, 3, 2]
  0  4.7123889803846897E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[2, 4, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[2, 4, 2]
  0  5.7595865315812880E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[2, 5, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[2, 5, 2]
  0  6.8067840827778863E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[2, 6, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[2, 6, 2]
  0 -5.2359877559829959E-01       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[3, 1, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[3, 1, 2]
  0  5.2359877559829826E-01       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[3, 2, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[3, 2, 2]
  0  1.5707963267948966E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[3, 3, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[3, 3, 2]
  0  3.6651914291880914E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[3, 4, 1]
  0       1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[3, 4, 2]
  0  4.7123889803846897E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[3, 5, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[3, 5, 2]
  0  5.7595865315812880E+00       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[3, 6, 1]
  0      -1                       0                       0                
  6   256   # drive.machine.coreElement.trapezoidalEMF.TMSE[3, 6, 2]
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.coreElement.trapezoidalEMF.plug_sp.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.coreElement.trapezoidalEMF.plug_sn.m
  0       0                       0                       0                
  6   260   # drive.machine.coreElement.trapezoidalEMF.support.phi
  0       0                       0                       0                
  6   260   # drive.machine.coreElement.trapezoidalEMF.support.der(phi)
  0       0                       0                       0                
  6   388   # drive.machine.coreElement.inertiaRotor.flange_b.tau
  0  1.0000000000000001E-15       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.inertiaRotor.J
  0       3                       1                       5                
  6   770   # drive.machine.coreElement.inertiaRotor.stateSelect
 -1       0                       0                       0                
  2   280   # drive.machine.coreElement.damper.phi_rel
  0       0                       0                       0                
  3   256   # drive.machine.coreElement.damper.der(phi_rel)
 -1       0                       0                       0                
  2   280   # drive.machine.coreElement.damper.w_rel
  0       0                       0                       0                
  3   256   # drive.machine.coreElement.damper.der(w_rel)
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.damper.tau
  0       0                       0                       0                
  6   260   # drive.machine.coreElement.damper.flange_b.phi
  0  1.0000000000000000E-04       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.damper.phi_nominal
  0       4                       1                       5                
  6   770   # drive.machine.coreElement.damper.stateSelect
  0  3.7046760563380290E-04       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.damper.d
  0       0                       0                       0                
  6   769   # drive.machine.coreElement.damper.useHeatPort
  0       0                       0                       0                
  6   260   # drive.machine.coreElement.inertiaStator.flange_a.phi
  0       0                       0                       0                
  6   388   # drive.machine.coreElement.inertiaStator.flange_a.tau
  0       0                       0                       0                
  6   260   # drive.machine.coreElement.inertiaStator.flange_b.phi
  0       0                       0                       0                
  6   388   # drive.machine.coreElement.inertiaStator.flange_b.tau
  0  1.0000000000000001E-15       0                 1.0000000000000000E+100
  6   256   # drive.machine.coreElement.inertiaStator.J
  0       3                       1                       5                
  6   770   # drive.machine.coreElement.inertiaStator.stateSelect
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.inertiaStator.phi
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.inertiaStator.der(phi)
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.inertiaStator.w
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.inertiaStator.der(w)
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.inertiaStator.a
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.fixed.phi0
  0       0                       0                       0                
  6   260   # drive.machine.coreElement.fixed.flange.phi
  0       0                       0                       0                
  6   388   # drive.machine.coreElement.fixed.flange.tau
  0       0                       0                       0                
  6  1284   # drive.machine.coreElement.internalSupport.phi
  0       0                       0                       0                
  6  1412   # drive.machine.coreElement.internalSupport.tau
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.airgapTorque
  0       0                       0                       0                
  6   256   # drive.machine.coreElement.innerTorque
  0       3                       0                       0                
  6   258   # drive.machine.terminalBox.m
  0       1                       1                       2                
  6   258   # drive.machine.terminalBox.terminalConnection
  0       0                       0                       0                
  6   257   # drive.machine.terminalBox.isDelta
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.terminalBox.plug_sp.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.terminalBox.plug_sn.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.terminalBox.plugSupply.m
  0       0                       0                       0                
  6   388   # drive.machine.terminalBox.starpoint.i
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.machine.terminalBox.star.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.terminalBox.star.plug_p.m
  0       0                       0                       0                
  6   388   # drive.machine.terminalBox.star.pin_n.i
  0       0                       0                       0                
  6   256   # drive.machine.fixed.phi0
  0       0                       0                       0                
  6   260   # drive.machine.fixed.flange.phi
  0       0                       0                       0                
  6   388   # drive.machine.fixed.flange.tau
  0       0                       0                       0                
  6  1284   # drive.machine.internalSupport.phi
  0       0                       0                       0                
  6  1412   # drive.machine.internalSupport.tau
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.machine.electricPowerSensor.m
  0       0                       0                       0                
  6   256   # drive.machine.electricPowerSensor.Q
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.electricPowerSensor.plug_p.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.electricPowerSensor.plug_ni.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.electricPowerSensor.plug_nv.m
  0       0                       0                       0                
  6   260   # drive.machine.electricPowerSensor.plug_nv.pin[1].v
  0       0                       0                       0                
  6   388   # drive.machine.electricPowerSensor.plug_nv.pin[1].i
  0       0                       0                       0                
  6   260   # drive.machine.electricPowerSensor.plug_nv.pin[2].v
  0       0                       0                       0                
  6   388   # drive.machine.electricPowerSensor.plug_nv.pin[2].i
  0       0                       0                       0                
  6   260   # drive.machine.electricPowerSensor.plug_nv.pin[3].v
  0       0                       0                       0                
  6   388   # drive.machine.electricPowerSensor.plug_nv.pin[3].i
  0       0                       0                       0                
  6  1280   # drive.machine.electricPowerSensor.v_[1]
  0       0                       0                       0                
  6  1280   # drive.machine.electricPowerSensor.v_[2]
  0       0                       0                       0                
  6  1280   # drive.machine.electricPowerSensor.i_[1]
  0       0                       0                       0                
  6  1280   # drive.machine.electricPowerSensor.i_[2]
  0       3                       1                 1.0000000000000000E+100
  6   258   # drive.machine.star.m
  0       3                       1                 1.0000000000000000E+100
  6   262   # drive.machine.star.plug_p.m
  0       0                       0                       0                
  6   260   # drive.machine.star.plug_p.pin[1].v
  0       0                       0                       0                
  6   388   # drive.machine.star.plug_p.pin[1].i
  0       0                       0                       0                
  6   260   # drive.machine.star.plug_p.pin[2].v
  0       0                       0                       0                
  6   388   # drive.machine.star.plug_p.pin[2].i
  0       0                       0                       0                
  6   260   # drive.machine.star.plug_p.pin[3].v
  0       0                       0                       0                
  6   388   # drive.machine.star.plug_p.pin[3].i
  0       0                       0                       0                
  6   260   # drive.machine.star.pin_n.v
  0       0                       0                       0                
  6   388   # drive.machine.star.pin_n.i
  0       0                       0                       0                
  6   260   # drive.machine.ground.p.v
  0       0                       0                       0                
  6   388   # drive.machine.ground.p.i
  0      -1                       0                       0                
  6   256   # drive.machine.signChange.k
  0       0                       0                       0                
  6   260   # drive.machine.speedSensor.flange_a.phi
  0       0                       0                       0                
  6   388   # drive.machine.speedSensor.flange_a.tau
  0       0                       0                       0                
  6   388   # drive.machine.speedSensor.flange_b.tau
  0       0                       0                       0                
  6   260   # drive.machine.angleSensorIdeal.flange_a.phi
  0       0                       0                       0                
  6   388   # drive.machine.angleSensorIdeal.flange_a.tau
  0       0                       0                       0                
  6   388   # drive.machine.angleSensorIdeal.flange_b.tau
  0       0                       0                       0                
  6   260   # drive.ground.p.v
  0       0                       0                       0                
  6   388   # drive.ground.p.i
  0       0                       0                       0                
  6   769   # drive.speedDependentTorque.useSupport
  0  5.1390000000000002E+00       0                       0                
  6   388   # drive.speedDependentTorque.flange.tau
  0       0                       0                       0                
  6  1280   # drive.speedDependentTorque.phi_support
  0 -5.1390000000000002E+00       0                       0                
  6   256   # drive.speedDependentTorque.tau
  0 -5.1390000000000002E+00       0                       0                
  6   388   # drive.inertia.flange_b.tau
  0  6.2899999999999998E-02       0                 1.0000000000000000E+100
  6   256   # drive.inertia.J
  0       3                       1                       5                
  6   770   # drive.inertia.stateSelect
  0  5.1390000000000002E+00       0                       0                
  6   388   # drive.multiSensorLoad.flange_a.tau
  0 -5.1390000000000002E+00       0                       0                
  6   388   # drive.multiSensorLoad.flange_b.tau
  0       0                       0                       0                
  6   256   # drive.multiSensorLoad.power
  0  5.1390000000000002E+00       0                       0                
  6   256   # drive.multiSensorLoad.tau
  0      60                       0                       0                
  6   260   # drive.pin_p.v
  0       0                       0                       0                
  6   388   # drive.pin_p.i
  0       0                       0                       0                
  6   260   # drive.pin_n.v
  0 -5.1390000000000002E+00       0                       0                
  6   256   # drive.tau
  0       0                       0                       0                
  6   256   # drive.tau1
  0  5.0000000000000000E-01       0                       0                
  6   256   # dutyCycle.height
  0       0                       0                       0                
  6   320   # dutyCycle.y
  0  2.9999999999999999E-01       0                       0                
  6   256   # dutyCycle.offset
  0       5                       0                       0                
  6   256   # dutyCycle.startTime
  0      60                       0                       0                
  6   256   # constantVoltage.V
  0      60                       0                       0                
  6   256   # constantVoltage.v
  0      60                       0                       0                
  6   260   # constantVoltage.p.v
  0       0                       0                       0                
  6   260   # constantVoltage.n.v
  0 -5.1390000000000002E+00       0                       0                
  6   256   # dutyCycle1.k
  0 -5.1390000000000002E+00       0                       0                
  6   256   # dutyCycle1.y
  0       1                       0                       0                
  6   256   # firstOrder.k
  0  8.0000000000000002E-02       0                       0                
  6   256   # firstOrder.T
  0       2                       1                       4                
  6   258   # firstOrder.initType
  0       0                       0                       0                
  6   256   # firstOrder.y_start
 -1       0                       0                       0                
  2   272   # firstOrder.y
  0       0                       0                       0                
  3   256   # firstOrder.der(y)
  0    1000                       0                       0                
  6   256   # rotateCW1.startTime
  0       1                       0                       0                
  6   257   # rotateCW1.startValue
  0       0                       0                       0                
  6   321   # rotateCW1.y
  0  5.0000000000000000E-01       0                       0                
  6   256   # dutyCycle2.height
  0       0                       0                       0                
  6   320   # dutyCycle2.y
  0  2.9999999999999999E-01       0                       0                
  6   256   # dutyCycle2.offset
  0       5                       0                       0                
  6   256   # dutyCycle2.startTime
  0       3                       0                       0                
  6   258   # drive_45_Outputs.controller.m
  0       1                       0                       0                
  6   257   # drive_45_Outputs.controller.useDirectionInput
  0       0                       0                       0                
  6   257   # drive_45_Outputs.controller.rotateCW
  0       3                       0                       0                
  6   258   # drive_45_Outputs.modulation.m
  0      60                       0                       0                
  6   260   # drive_45_Outputs.inverter.pin_p.v
  0       0                       0                       0                
  6   260   # drive_45_Outputs.inverter.pin_n.v
  0       0                       0                       0                
  6   257   # drive_45_Outputs.inverter.data.bidirectional
  0       0                       0                       0                
  6   260   # drive_45_Outputs.inverter.pin_p_Out.v
  0       0                       0                       0                
  6   260   # drive_45_Outputs.inverter.pin_n_Out.v
  0       0                       0                       0                
  6   257   # drive_45_Outputs.inverter.coreElement.bidirectional
  0       0                       0                       0                
  6   256   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.y
  0       0                       0                       0                
  6   256   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.u1
  0       1                       0                       0                
  6   256   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.u2
  0       0                       0                       0                
  6   256   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.y1
  0       1                       0                       0                
  6   256   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.y2
  0       1                       0                       0                
  6   256   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.k
  0       0                       0                       0                
  6   256   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.y0
  0       1                       0                       0                
  6   256   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.gradient.k
  0       0                       0                       0                
  6   256   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.add.u1
  0       1                       0                       0                
  6   256   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.add.k1
  0       1                       0                       0                
  6   256   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.add.k2
  0       0                       0                       0                
  6   256   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.offset.k
  0       0                       0                       0                
  6   256   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.offset.y
  0       1                       0                       0                
  6   256   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.limiter.uMax
  0       0                       0                       0                
  6   256   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.limiter.uMin
  0       0                       0                       0                
  6   257   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.limiter.strict
  0       2                       1                       4                
  6   258   # drive_45_Outputs.inverter.coreElement.uniOrBidirectional.limiter.homotopyType
  0      60                       0                       0                
  6   256   # drive_45_Outputs.inverter.coreElement.idealBuckConverter.v1
  0      60                       0                       0                
  6   260   # drive_45_Outputs.inverter.coreElement.idealBuckConverter.p1.v
  0       0                       0                       0                
  6   260   # drive_45_Outputs.inverter.coreElement.idealBuckConverter.n1.v
  0       0                       0                       0                
  6   260   # drive_45_Outputs.inverter.coreElement.idealBuckConverter.n2.v
  0       0                       0                       1                
  6   256   # drive_45_Outputs.inverter.coreElement.idealBuckConverter.dutyCycle
  0      60                       0                       0                
  6   260   # drive_45_Outputs.inverter.coreElement.pin_p_supply.v
  0       0                       0                       0                
  6   260   # drive_45_Outputs.inverter.coreElement.pin_n_supply.v
  0       0                       0                       0                
  6   260   # drive_45_Outputs.inverter.coreElement.pin_n.v
  0       0                       0                       0                
  6   320   # drive_45_Outputs.inverter.coreElement.signChanger.y
  0       0                       0                       0                
  6   260   # drive_45_Outputs.inverter.ground.p.v
  0       0                       0                       0                
  6   388   # drive_45_Outputs.inverter.ground.p.i
  0      60                       0                       0                
  6   260   # drive_45_Outputs.inverter.currentSensorDC.p.v
  0      60                       0                       0                
  6   260   # drive_45_Outputs.inverter.currentSensorDC.n.v
  0       0                       0                       0                
  6   256   # drive_45_Outputs.inverter.currentAC_Averaged.u
  0       0                       0                       0                
  6   320   # drive_45_Outputs.inverter.voltageChanger.y
  0      60                       0                       0                
  6   260   # drive_45_Outputs.inverter.voltageSensorDC.p.v
  0       0                       0                       0                
  6   388   # drive_45_Outputs.inverter.voltageSensorDC.p.i
  0       0                       0                       0                
  6   260   # drive_45_Outputs.inverter.voltageSensorDC.n.v
  0       0                       0                       0                
  6   388   # drive_45_Outputs.inverter.voltageSensorDC.n.i
  0      60                       0                       0                
  6   256   # drive_45_Outputs.inverter.voltageSensorDC.v
  0      60                       0                       0                
  6   256   # drive_45_Outputs.inverter.voltageDC.u
  0       0                       0                       0                
  6   256   # drive_45_Outputs.multiSensorMotor.power
  0       3                       0                       0                
  6   258   # drive_45_Outputs.machine.data.m
  0  1.5500000000000000E-02       0                       0                
  6   256   # drive_45_Outputs.machine.data.Rt
  0       2                       0                       0                
  6   258   # drive_45_Outputs.machine.data.p
  0       1                       0                       0                
  6   257   # drive_45_Outputs.machine.data.useL
  0       1                       0                       0                
  6   257   # drive_45_Outputs.machine.data.useLt
  0  3.9999999999999998E-06       0                       0                
  6   256   # drive_45_Outputs.machine.data.Lt
  0  1.0000000000000001E-15       0                       0                
  6   256   # drive_45_Outputs.machine.data.L
  0  1.0000000000000001E-15       0                       0                
  6   256   # drive_45_Outputs.machine.data.M
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.data.Ls_sigma
  0       1                       1                       2                
  6   258   # drive_45_Outputs.machine.data.fluxSource
  0  1.3420000000000001E-01       0                       0                
  6   256   # drive_45_Outputs.machine.data.k_tau
  0      71                       0                       0                
  6   256   # drive_45_Outputs.machine.data.k_speed
  0  1.0000000000000001E-15       0                       0                
  6   256   # drive_45_Outputs.machine.data.Jr
  0  1.0000000000000001E-15       0                       0                
  6   256   # drive_45_Outputs.machine.data.Js
  0  9.8000000000000007E+00       0                 1.0000000000000000E+100
  6   256   # drive_45_Outputs.machine.data.I_0
  0    3550                  9.9999999999999997E-61 1.0000000000000000E+100
  6   256   # drive_45_Outputs.machine.data.w_0
  0      50                       0                       0                
  6   256   # drive_45_Outputs.machine.data.u_s_nom
  0  1.7780000000000001E+02       0                       0                
  6   256   # drive_45_Outputs.machine.data.i_s_nom
  0  2.3853000000000002E+01       0                       0                
  6   256   # drive_45_Outputs.machine.data.tau_nom
  0  3.5238197597765509E+02       0                       0                
  6   256   # drive_45_Outputs.machine.data.w_nom
  0  8.4053672729950067E+03       0                       0                
  6   256   # drive_45_Outputs.machine.data.P_nom
  0  1.3420000000000001E-01       0                       0                
  6   256   # drive_45_Outputs.machine.data.kDC
  0  3.7046760563380290E-04       0                       0                
  6   256   # drive_45_Outputs.machine.data.b
  0  7.7499999999999999E-03       0                       0                
  6   256   # drive_45_Outputs.machine.data.Rs
  0  1.9999999999999999E-06       0                       0                
  6   256   # drive_45_Outputs.machine.data.Ls
  0  2.0943951023931953E+00  9.9999999999999997E-61  3.1415926535897931E+00
  6   256   # drive_45_Outputs.machine.data.maxEMF_constant
  0  3.6651914291880918E+00       0                       0                
  6   256   # drive_45_Outputs.machine.data.maxEMF_start[1]
  0  5.7595865315812880E+00       0                       0                
  6   256   # drive_45_Outputs.machine.data.maxEMF_start[2]
  0  7.8539816339744828E+00       0                       0                
  6   256   # drive_45_Outputs.machine.data.maxEMF_start[3]
  0       0                       0                       0                
  6   257   # drive_45_Outputs.machine.useSupport
  0       0                       0                       0                
  6   257   # drive_45_Outputs.machine.useThermalPort
  0       0                       0                       0                
  6   260   # drive_45_Outputs.machine.pin_n.v
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.powerBalance.electricMachinePower
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.powerBalance.innerMachinePower
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.powerBalance.statorInertiaPower
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.powerBalance.rotorInertiaPower
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.powerBalance.totalLossPower
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.powerBalance.statorWindingLossPower
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.powerBalance.frictionLossPower
  0  1.5500000000000000E-02       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.R
  0       1                       0                       0                
  6   257   # drive_45_Outputs.machine.coreElement.useL
  0  3.9999999999999998E-06       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.L
  0  1.0000000000000001E-15       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.Jr
  0  1.0000000000000001E-15       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.Js
  0  3.7046760563380290E-04       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.b
  0       0                       0                       0                
  6   257   # drive_45_Outputs.machine.coreElement.useSupport
  0       0                       0                       0                
  6   257   # drive_45_Outputs.machine.coreElement.useThermalPort
  0  1.3420000000000001E-01       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.k
  0       0                       0                       0                
  6   260   # drive_45_Outputs.machine.coreElement.pin_n.v
  0  1.5500000000000000E-02       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.resistor.R
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive_45_Outputs.machine.coreElement.resistor.T_ref
  0  3.9699999999999996E-03       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.resistor.alpha
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.resistor.v
  0       0                       0                       0                
  6   260   # drive_45_Outputs.machine.coreElement.resistor.n.v
  0       0                       0                       0                
  6   769   # drive_45_Outputs.machine.coreElement.resistor.useHeatPort
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive_45_Outputs.machine.coreElement.resistor.T
  0  2.9314999999999998E+02       0                 1.0000000000000000E+100
  6   256   # drive_45_Outputs.machine.coreElement.resistor.T_heatPort
  0  1.5500000000000000E-02       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.resistor.R_actual
  0       1                       0                       0                
  6   769   # drive_45_Outputs.machine.coreElement.backEMF.useSupport
  0  1.3420000000000001E-01       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.backEMF.k
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.backEMF.v
  0       0                       0                       0                
  6   260   # drive_45_Outputs.machine.coreElement.backEMF.n.v
  0       0                       0                       0                
  6   260   # drive_45_Outputs.machine.coreElement.backEMF.support.phi
  0       0                       0                       0                
  6  1280   # drive_45_Outputs.machine.coreElement.backEMF.internalSupport.phi
  0       0                       0                       0                
  6  1284   # drive_45_Outputs.machine.coreElement.backEMF.internalSupport.flange.phi
  0       0                       0                       0                
  6   388   # drive_45_Outputs.machine.coreElement.inertiaRotor.flange_b.tau
  0  1.0000000000000001E-15       0                 1.0000000000000000E+100
  6   256   # drive_45_Outputs.machine.coreElement.inertiaRotor.J
  0       3                       1                       5                
  6   770   # drive_45_Outputs.machine.coreElement.inertiaRotor.stateSelect
 -1       0                       0                       0                
  2   272   # drive_45_Outputs.machine.coreElement.damper.phi_rel
  0       0                       0                       0                
  3   256   # drive_45_Outputs.machine.coreElement.damper.der(phi_rel)
 -1       0                       0                       0                
  2   280   # drive_45_Outputs.machine.coreElement.damper.w_rel
  0       0                       0                       0                
  3   256   # drive_45_Outputs.machine.coreElement.damper.der(w_rel)
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.damper.tau
  0       0                       0                       0                
  6   260   # drive_45_Outputs.machine.coreElement.damper.flange_b.phi
  0  1.0000000000000000E-04       0                 1.0000000000000000E+100
  6   256   # drive_45_Outputs.machine.coreElement.damper.phi_nominal
  0       4                       1                       5                
  6   770   # drive_45_Outputs.machine.coreElement.damper.stateSelect
  0  3.7046760563380290E-04       0                 1.0000000000000000E+100
  6   256   # drive_45_Outputs.machine.coreElement.damper.d
  0       0                       0                       0                
  6   769   # drive_45_Outputs.machine.coreElement.damper.useHeatPort
  0       0                       0                       0                
  6   260   # drive_45_Outputs.machine.coreElement.inertiaStator.flange_a.phi
  0       0                       0                       0                
  6   388   # drive_45_Outputs.machine.coreElement.inertiaStator.flange_a.tau
  0       0                       0                       0                
  6   260   # drive_45_Outputs.machine.coreElement.inertiaStator.flange_b.phi
  0       0                       0                       0                
  6   388   # drive_45_Outputs.machine.coreElement.inertiaStator.flange_b.tau
  0  1.0000000000000001E-15       0                 1.0000000000000000E+100
  6   256   # drive_45_Outputs.machine.coreElement.inertiaStator.J
  0       3                       1                       5                
  6   770   # drive_45_Outputs.machine.coreElement.inertiaStator.stateSelect
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.inertiaStator.phi
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.inertiaStator.der(phi)
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.inertiaStator.w
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.inertiaStator.der(w)
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.inertiaStator.a
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.fixed.phi0
  0       0                       0                       0                
  6   260   # drive_45_Outputs.machine.coreElement.fixed.flange.phi
  0       0                       0                       0                
  6   388   # drive_45_Outputs.machine.coreElement.fixed.flange.tau
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.innerTorque
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.airgapTorque
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.overallInductance.v
 -1       0                       0                       0                
  2   280   # drive_45_Outputs.machine.coreElement.overallInductance.i
  0       0                       0                       0                
  3   256   # drive_45_Outputs.machine.coreElement.overallInductance.der(i)
  0  3.9999999999999998E-06       0                       0                
  6   256   # drive_45_Outputs.machine.coreElement.overallInductance.L
  0       0                       0                       0                
  6  1284   # drive_45_Outputs.machine.coreElement.internalSupport.phi
  0       0                       0                       0                
  6  1412   # drive_45_Outputs.machine.coreElement.internalSupport.tau
  0      -1                       0                       0                
  6   256   # drive_45_Outputs.machine.signChange.k
  0       0                       0                       0                
  6   388   # drive_45_Outputs.machine.powerSensor.pv.i
  0       0                       0                       0                
  6   260   # drive_45_Outputs.machine.powerSensor.nv.v
  0       0                       0                       0                
  6   388   # drive_45_Outputs.machine.powerSensor.nv.i
  0       0                       0                       0                
  6   388   # drive_45_Outputs.machine.powerSensor.voltageSensor.p.i
  0       0                       0                       0                
  6   260   # drive_45_Outputs.machine.powerSensor.voltageSensor.n.v
  0       0                       0                       0                
  6   388   # drive_45_Outputs.machine.powerSensor.voltageSensor.n.i
  0       0                       0                       0                
  6   260   # drive_45_Outputs.machine.angleSensorIdeal.flange_a.phi
  0       0                       0                       0                
  6   388   # drive_45_Outputs.machine.angleSensorIdeal.flange_a.tau
  0       0                       0                       0                
  6   388   # drive_45_Outputs.machine.angleSensorIdeal.flange_b.tau
  0       0                       0                       0                
  6   260   # drive_45_Outputs.machine.speedSensor.flange_a.phi
  0       0                       0                       0                
  6   388   # drive_45_Outputs.machine.speedSensor.flange_a.tau
  0       0                       0                       0                
  6   388   # drive_45_Outputs.machine.speedSensor.flange_b.tau
  0       0                       0                       0                
  6   256   # drive_45_Outputs.machine.fixed.phi0
  0       0                       0                       0                
  6   260   # drive_45_Outputs.machine.fixed.flange.phi
  0       0                       0                       0                
  6   388   # drive_45_Outputs.machine.fixed.flange.tau
  0       0                       0                       0                
  6  1284   # drive_45_Outputs.machine.internalSupport.phi
  0       0                       0                       0                
  6  1412   # drive_45_Outputs.machine.internalSupport.tau
  0       0                       0                       0                
  6   260   # drive_45_Outputs.ground.p.v
  0       0                       0                       0                
  6   388   # drive_45_Outputs.ground.p.i
  0       0                       0                       0                
  6   769   # drive_45_Outputs.speedDependentTorque.useSupport
  0  5.1390000000000002E+00       0                       0                
  6   388   # drive_45_Outputs.speedDependentTorque.flange.tau
  0       0                       0                       0                
  6  1280   # drive_45_Outputs.speedDependentTorque.phi_support
  0 -5.1390000000000002E+00       0                       0                
  6   256   # drive_45_Outputs.speedDependentTorque.tau
  0 -5.1390000000000002E+00       0                       0                
  6   388   # drive_45_Outputs.inertia.flange_b.tau
  0  6.2899999999999998E-02       0                 1.0000000000000000E+100
  6   256   # drive_45_Outputs.inertia.J
  0       3                       1                       5                
  6   770   # drive_45_Outputs.inertia.stateSelect
  0       0                       0                       0                
  6   264   # drive_45_Outputs.inertia.phi
  0  5.1390000000000002E+00       0                       0                
  6   388   # drive_45_Outputs.multiSensorLoad.flange_a.tau
  0 -5.1390000000000002E+00       0                       0                
  6   388   # drive_45_Outputs.multiSensorLoad.flange_b.tau
  0       0                       0                       0                
  6   256   # drive_45_Outputs.multiSensorLoad.power
  0  5.1390000000000002E+00       0                       0                
  6   256   # drive_45_Outputs.multiSensorLoad.tau
  0      60                       0                       0                
  6   260   # drive_45_Outputs.pin_p.v
  0       0                       0                       0                
  6   388   # drive_45_Outputs.pin_p.i
  0       0                       0                       0                
  6   260   # drive_45_Outputs.pin_n.v
  0 -5.1390000000000002E+00       0                       0                
  6   256   # drive_45_Outputs.tau
  0       0                       0                       0                
  6   256   # drive_45_Outputs.tau1
  0      60                       0                       0                
  6   256   # constantVoltage1.V
  0      60                       0                       0                
  6   256   # constantVoltage1.v
  0      60                       0                       0                
  6   260   # constantVoltage1.p.v
  0       0                       0                       0                
  6   260   # constantVoltage1.n.v
  0 -5.1390000000000002E+00       0                       0                
  6   256   # const.k
  0 -5.1390000000000002E+00       0                       0                
  6   256   # const.y
  0       1                       0                       0                
  6   256   # firstOrder1.k
  0  8.0000000000000002E-02       0                       0                
  6   256   # firstOrder1.T
  0       2                       1                       4                
  6   258   # firstOrder1.initType
  0       0                       0                       0                
  6   256   # firstOrder1.y_start
 -1       0                       0                       0                
  2   272   # firstOrder1.y
  0       0                       0                       0                
  3   256   # firstOrder1.der(y)
  0      60                       0                       0                
  6   260   # drive.inverter.voltageDC.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive_45_Outputs.inverter.voltageDC.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive.controller.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive.controller.hallSensorOutput.electricDriveBus.voltageDC
  0      60                       0                       0                
  6   260   # drive.inverter.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive.inverter.currentAC.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive.inverter.currentDC.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive.machine.airGapTorque.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive.machine.angleSensor.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive.machine.angleSensor.hallSensorOutput.electricDriveBus.voltageDC
  0      60                       0                       0                
  6   260   # drive.machine.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive.machine.electricMachinePower.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive.machine.innerMachinePower.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive.machine.innerTorque.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive.machine.machineAngle.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive.machine.machineSpeed.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive.modulation.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive.modulation.dutyCycle.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive_45_Outputs.controller.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive_45_Outputs.inverter.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive_45_Outputs.inverter.currentAC_Averaged.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive_45_Outputs.inverter.currentDC.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive_45_Outputs.machine.airGapTorque.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive_45_Outputs.machine.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive_45_Outputs.machine.electricMachinePower.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive_45_Outputs.machine.innerMachinePower.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive_45_Outputs.machine.innerTorque.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive_45_Outputs.machine.machineAngle.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive_45_Outputs.machine.machineSpeed.bldcBus.voltageDC
  0      60                       0                       0                
  6   260   # drive_45_Outputs.modulation.bldcBus.voltageDC
  0       0                       0                       0                
  4   256   # CPUtime
  0       0                       0                       0                
  4   256   # EventCounter


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(1120,125)
Time instant of step start [s]
Output before startTime [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
[:#(type=Boolean)]
[:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Row in 'inputTable' which was provided by the sensor, 'outputTable' is chosen accordingly [:#(type=Integer)]
[:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=BrushlessDCDrives.Common.Interfaces.HalfBridgeOutput)]
[:#(type=BrushlessDCDrives.Common.Interfaces.HalfBridgeOutput)]
[:#(type=BrushlessDCDrives.Common.Interfaces.HalfBridgeOutput)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values from the Hall sensors, last two should not occur [:#(type=Boolean)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Values for inverter switch control for counter-clockwise direction [:#(type=BrushlessDCDrives.Common.Types.HalfBridgeStatus)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
[:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Potential at the pin [V]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Inverter acts like it is controlled by a bidirectional modulation method [:#(type=Boolean)]
Closed switch resistance [Ohm]
Opened switch conductance [S]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Closed switch resistance [Ohm]
Closed switch resistance [Ohm]
Closed switch resistance [Ohm]
Opened switch conductance [S]
Opened switch conductance [S]
Opened switch conductance [S]
Number of heatPorts=number of phases [:#(type=Integer)]
= true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Voltage drop of the two pins (= p.v - n.v) [V]
Closed switch resistance [Ohm]
Opened switch conductance [S]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Indicates off-state [:#(type=Boolean)]
Auxiliary variable [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Closed switch resistance [Ohm]
Opened switch conductance [S]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Indicates off-state [:#(type=Boolean)]
Auxiliary variable [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Closed switch resistance [Ohm]
Opened switch conductance [S]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Indicates off-state [:#(type=Boolean)]
Auxiliary variable [1]
[V]
[A]
Number of phases [:#(type=Integer)]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Closed switch resistance [Ohm]
Closed switch resistance [Ohm]
Closed switch resistance [Ohm]
Opened switch conductance [S]
Opened switch conductance [S]
Opened switch conductance [S]
Number of heatPorts=number of phases [:#(type=Integer)]
= true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Potential at the pin [V]
Closed switch resistance [Ohm]
Opened switch conductance [S]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Indicates off-state [:#(type=Boolean)]
Auxiliary variable [1]
[V]
[A]
Potential at the pin [V]
Closed switch resistance [Ohm]
Opened switch conductance [S]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Indicates off-state [:#(type=Boolean)]
Auxiliary variable [1]
[V]
[A]
Potential at the pin [V]
Closed switch resistance [Ohm]
Opened switch conductance [S]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Indicates off-state [:#(type=Boolean)]
Auxiliary variable [1]
[V]
[A]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Closed diode resistance [Ohm]
Closed diode resistance [Ohm]
Closed diode resistance [Ohm]
Opened diode conductance [S]
Opened diode conductance [S]
Opened diode conductance [S]
Threshold voltage [V]
Threshold voltage [V]
Threshold voltage [V]
Number of heatPorts=number of phases [:#(type=Integer)]
= true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of the two pins (= p.v - n.v) [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Number of phases [:#(type=Integer)]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Currents flowing into positive polyphase plugs [A]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Number of phases [:#(type=Integer)]
Closed diode resistance [Ohm]
Closed diode resistance [Ohm]
Closed diode resistance [Ohm]
Opened diode conductance [S]
Opened diode conductance [S]
Opened diode conductance [S]
Threshold voltage [V]
Threshold voltage [V]
Threshold voltage [V]
Number of heatPorts=number of phases [:#(type=Integer)]
= true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Potential at the pin [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Potential at the pin [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Potential at the pin [V]
Forward state-on differential resistance (closed resistance) [Ohm]
Backward state-off conductance (opened conductance) [S]
Forward threshold voltage [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Switching state [:#(type=Boolean)]
Auxiliary variable for actual position on the ideal diode characteristic [1]
[V]
[A]
Voltage drop of port 1 (= p1.v - n1.v) [V]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
[1]
Potential at the pin [V]
Potential at the pin [V]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Inverter acts like it is controlled by a bidirectional modulation method [:#(type=Boolean)]
Connector of Real output signal [1]
Lower boundary of input u, switching from constant value y1 to linear interpolation
Upper boundary of input u, switching from linear interpolation to constant value y2
Minimum value for y
Maximum value for y
Slope of the resulting line equation [1]
Offset of the resulting line equation
Gain value multiplied with input signal [1]
Connector of Real input signal 1
Gain of input signal 1
Gain of input signal 2
Constant output value
Connector of Real output signal
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Choose whether events shall be generated [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Inverter acts like it is controlled by a bidirectional modulation method [:#(type=Boolean)]
Closed switch resistance [Ohm]
Opened switch conductance [S]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Voltage between pin p and n (= p.v - n.v) as output signal [V]
DC current of the inverter [V]
Power in flange flange_a as output signal [W]
Number of phases [:#(type=Integer)]
Terminal resistances [Ohm]
Number of pole pairs [:#(type=Integer)]
Internal inductance shall be used [:#(type=Boolean)]
if true Lt is used in the main diagonal otherwise L on the main d. and M for the other elements [:#(type=Boolean)]
Terminal inductance = 2*(L-M) [H]
Stator self inductance [H]
Stator mututal inductance [H]
Leakage inductance at the terminals [H]
Selection which variable shall be used to compute the Back-EMF [:#(type=BrushlessDCDrives.Common.Types.FluxSource)]
Torque constant [N.m/A]
Speed constant in rpm/V [rev.min-1/V]
Rotor's moment of inertia [kg.m2]
Stator's moment of inertia (only has effect if stator not fixed (useSupport = false)) [kg.m2]
No load current, used to compute a linear friction element [A]
No load speed to compute a linear friction element [rad/s]
Nominal voltage [V]
Nominal current [A]
Nominal torque [N.m]
Nominal mechanical speed [rad/s]
Nominal mechanical power [W]
Torque constant for BLDC Model [N.m/A]
Damping coefficient from no-load current [N.m.s/rad]
Resistance of a single stator winding [Ohm]
Overall stator winding inductance [H]
Angle over which the Back-EMF is constant [rad|deg]
Angle at which the respective phases (frist element = first phase etc.) have reached their postive maximum EMF [rad|deg]
Angle at which the respective phases (frist element = first phase etc.) have reached their postive maximum EMF [rad|deg]
Angle at which the respective phases (frist element = first phase etc.) have reached their postive maximum EMF [rad|deg]
True: stator is able to rotate, false: stator is fixed internally [:#(type=Boolean)]
True: thermal connector is provided, false: temperature is fixed to 20degC internally [:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Electrical power (stator) [W]
Mechanical power [W]
Stator inertia power [W]
Rotor inertia power [W]
Total loss power [W]
Stator copper losses [W]
Friction losses [W]
Number of phases [:#(type=Integer)]
Number of pole pairs [:#(type=Integer)]
Cut torque in the flange [N.m]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Number of phases [:#(type=Integer)]
Starting angles of the pulses [rad|deg]
Starting angles of the pulses [rad|deg]
Starting angles of the pulses [rad|deg]
Width of the TRUE pulse output by the Hall sensors [rad|deg]
Number of pole pairs [:#(type=Integer)]
Ending angle of the pulses [rad|deg]
Ending angle of the pulses [rad|deg]
Ending angle of the pulses [rad|deg]
Start angle < 2*pi [rad|deg]
Start angle < 2*pi [rad|deg]
Start angle < 2*pi [rad|deg]
End angle < 2*pi [rad|deg]
End angle < 2*pi [rad|deg]
End angle < 2*pi [rad|deg]
[rad|deg]
[rad|deg]
Cut torque in the flange [N.m]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Number of phases [:#(type=Integer)]
Starting angles of the pulses [rad|deg]
Starting angles of the pulses [rad|deg]
Starting angles of the pulses [rad|deg]
Width of the TRUE pulse output by the Hall sensors [rad|deg]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Phase Resistances R_ref at 20degC [Ohm]
Overall inductance of the machine (self + leakage) [H]
Selection which variable shall be used to compute the Back-EMF [:#(type=BrushlessDCDrives.Common.Types.FluxSource)]
Torque constant [N.m/A]
Speed constant in rpm/V [rev.min-1/V]
Number of pole pairs [:#(type=Integer)]
Rotor's moment of inertia [kg.m2]
Stator's moment of inertia (only has effect if stator not fixed (useSupport = false)) [kg.m2]
Damping coefficient [N.m.s/rad]
False: Stator is fixed internally, false: it can rotate [:#(type=Boolean)]
True: thermal connector is provided, false: temperature is fixed internally [:#(type=Boolean)]
Angle over which the Back-EMF is constant [rad|deg]
Angle at which the respective phases (frist element = first phase etc.) have reach their postive maximum EMF [rad|deg]
Angle at which the respective phases (frist element = first phase etc.) have reach their postive maximum EMF [rad|deg]
Angle at which the respective phases (frist element = first phase etc.) have reach their postive maximum EMF [rad|deg]
Voltage at the motor [V]
Voltage at the motor [V]
Voltage at the motor [V]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Resistances R_ref at temperatures T_ref [Ohm]
Resistances R_ref at temperatures T_ref [Ohm]
Resistances R_ref at temperatures T_ref [Ohm]
Reference temperatures [K|degC]
Reference temperatures [K|degC]
Reference temperatures [K|degC]
Temperature coefficients of resistances at reference temperatures [1/K]
Temperature coefficients of resistances at reference temperatures [1/K]
Temperature coefficients of resistances at reference temperatures [1/K]
Number of heatPorts=number of phases [:#(type=Integer)]
= true, if all heat ports are enabled [:#(type=Boolean)]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Fixed device temperatures if useHeatPort = false [K|degC]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Temperature of heatPort [K|degC]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Number of phases [:#(type=Integer)]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Voltage drops of the two polyphase plugs [V]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Inductance [H]
Inductance [H]
Inductance [H]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Inductance [H]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Inductance [H]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Inductance [H]
Number of phases [:#(type=Integer)]
Selection which variable shall be used to compute the Back-EMF [:#(type=BrushlessDCDrives.Common.Types.FluxSource)]
Torque constant [N.m/A]
Speed constant in rpm/V [rev.min-1/V]
Number of pole pairs [:#(type=Integer)]
Maximum induced voltage (back-EMF) at 1 rad/s (electrical) in a single phase [V]
Angle over which the back-EMF is constant [rad|deg]
Angle at which the respective phases (frist element = first phase etc.) have reach their postive maximum EMF [rad|deg]
Angle at which the respective phases (frist element = first phase etc.) have reach their postive maximum EMF [rad|deg]
Angle at which the respective phases (frist element = first phase etc.) have reach their postive maximum EMF [rad|deg]
[rad|deg]
[rad/s]
Absolute value of area/integral of backEMF from 0 to pi/2 [Wb]
Rotor Angle limited to 2*pi [rad|deg]
Rotors electric angular velocity [rad/s]
Voltage at the motor [V]
Voltage at the motor [V]
Voltage at the motor [V]
Function for the description of the back-EMF wave-form
Function for the description of the back-EMF wave-form
Function for the description of the back-EMF wave-form
Derivative of the Back-EMF wrt. the angle (at 1 rad/s) [Wb]
Derivative of the Back-EMF wrt. the angle (at 1 rad/s) [Wb]
Derivative of the Back-EMF wrt. the angle (at 1 rad/s) [Wb]
[rad|deg]
[rad|deg]
[rad|deg]
[rad|deg]
[rad|deg]
[rad|deg]
[rad|deg]
[rad|deg]
[rad|deg]
[rad|deg]
[rad|deg]
[rad|deg]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]








































































Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Absolute rotation angle of flange [rad|deg]
der(Absolute rotation angle of flange) [rad/s]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Relative rotation angle (= flange_b.phi - flange_a.phi) [rad|deg]
der(Relative rotation angle (= flange_b.phi - flange_a.phi)) [rad/s]
Relative angular velocity (= der(phi_rel)) [rad/s]
der(Relative angular velocity (= der(phi_rel))) [rad/s2]
Torque between flanges (= flange_b.tau) [N.m]
Absolute rotation angle of flange [rad|deg]
Nominal value of phi_rel (used for scaling) [rad|rad]
Priority to use phi_rel and w_rel as states [:#(type=StateSelect)]
Damping constant [N.m.s/rad]
= true, if heatPort is enabled [:#(type=Boolean)]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Absolute rotation angle of component [rad|deg]
der(Absolute rotation angle of component) [rad/s]
Absolute angular velocity of component (= der(phi)) [rad/s]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
Absolute angular acceleration of component (= der(w)) [rad/s2]
Fixed offset angle of housing [rad|deg]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Torque in flange flange_a and flange_b (tau = flange_a.tau = -flange_b.tau) as output signal [N.m]
Torque in flange flange_a and flange_b (tau = flange_a.tau = -flange_b.tau) as output signal [N.m]
Number of phases [:#(type=Integer)]
Choose Y=star/D=delta [:#(type=BrushlessDCDrives.Common.Types.Terminal)]
[:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Current flowing into the pin [A]
Fixed offset angle of housing [rad|deg]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Number of phases [:#(type=Integer)]
[var]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
[V]
[V]
[A]
[A]
Number of phases [:#(type=Integer)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Gain value multiplied with input signal [1]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Potential at the pin [V]
Current flowing into the pin [A]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Cut torque in the flange [N.m]
Absolute angle of support flange [rad|deg]
Accelerating torque acting at flange (= -flange.tau) [N.m]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Power in flange flange_a as output signal [W]
Torque in flange flange_a and flange_b (tau = flange_a.tau = -flange_b.tau) as output signal [N.m]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Accelerating torque acting at flange (= -flange.tau) [N.m]
Torque in flange flange_a and flange_b (tau = flange_a.tau = -flange_b.tau) as output signal [N.m]
Height of step
Connector of Real output signal
Offset of output signal y
Output y = offset for time < startTime [s]
Value of constant voltage [V]
Voltage drop of the two pins (= p.v - n.v) [V]
Potential at the pin [V]
Potential at the pin [V]
Constant output value [N.m]
Connector of Real output signal [N.m]
Gain [1]
Time Constant [s]
Type of initialization (1: no init, 2: steady state, 3/4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state) [1]
Connector of Real output signal [1]
der(Connector of Real output signal) [s-1]
Time instant of step start [s]
Output before startTime [:#(type=Boolean)]
Connector of Boolean output signal [:#(type=Boolean)]
Height of step
Connector of Real output signal
Offset of output signal y
Output y = offset for time < startTime [s]
Number of phases [:#(type=Integer)]
[:#(type=Boolean)]
[:#(type=Boolean)]
Number of phases [:#(type=Integer)]
Potential at the pin [V]
Potential at the pin [V]
Inverter acts like it is controlled by a bidirectional modulation method [:#(type=Boolean)]
Potential at the pin [V]
Potential at the pin [V]
Inverter acts like it is controlled by a bidirectional modulation method [:#(type=Boolean)]
Connector of Real output signal
Lower boundary of input u, switching from constant value y1 to linear interpolation
Upper boundary of input u, switching from linear interpolation to constant value y2
Minimum value for y
Maximum value for y
Slope of the resulting line equation [1]
Offset of the resulting line equation
Gain value multiplied with input signal [1]
Connector of Real input signal 1
Gain of input signal 1
Gain of input signal 2
Constant output value
Connector of Real output signal
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Simplified model for homotopy-based initialization [:#(type=Modelica.Blocks.Types.LimiterHomotopy)]
Voltage drop of port 1 (= p1.v - n1.v) [V]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
[1]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Value of Real output
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Potential at the pin [V]
DC current of the inverter [A]
Value of Real output [1]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Voltage between pin p and n (= p.v - n.v) as output signal [V]
DC current of the inverter [V]
Power in flange flange_a as output signal [W]
Number of phases [:#(type=Integer)]
Terminal resistances [Ohm]
Number of pole pairs [:#(type=Integer)]
Internal inductance shall be used [:#(type=Boolean)]
if true Lt is used in the main diagonal otherwise L on the main d. and M for the other elements [:#(type=Boolean)]
Terminal inductance = 2*(L-M) [H]
Stator self inductance [H]
Stator mututal inductance [H]
Leakage inductance at the terminals [H]
Selection which variable shall be used to compute the Back-EMF [:#(type=BrushlessDCDrives.Common.Types.FluxSource)]
Torque constant [N.m/A]
Speed constant in rpm/V [rev.min-1/V]
Rotor's moment of inertia [kg.m2]
Stator's moment of inertia (only has effect if stator not fixed (useSupport = false)) [kg.m2]
No load current, used to compute a linear friction element [A]
No load speed to compute a linear friction element [rad/s]
Nominal voltage [V]
Nominal current [A]
Nominal torque [N.m]
Nominal mechanical speed [rad/s]
Nominal mechanical power [W]
Torque constant for BLDC Model [N.m/A]
Damping coefficient from no-load current [N.m.s/rad]
Resistance of a single stator winding [Ohm]
Overall stator winding inductance [H]
Angle over which the Back-EMF is constant [rad|deg]
Angle at which the respective phases (frist element = first phase etc.) have reached their postive maximum EMF [rad|deg]
Angle at which the respective phases (frist element = first phase etc.) have reached their postive maximum EMF [rad|deg]
Angle at which the respective phases (frist element = first phase etc.) have reached their postive maximum EMF [rad|deg]
True: stator is able to rotate, false: stator is fixed internally [:#(type=Boolean)]
True: thermal connector is provided, false: temperature is fixed to 20degC internally [:#(type=Boolean)]
Potential at the pin [V]
Electrical power (stator) [W]
Mechanical power [W]
Stator inertia power [W]
Rotor inertia power [W]
Total loss power [W]
Stator copper losses [W]
Friction losses [W]
Phase Resistances R_ref at 20degC [Ohm]
Activate the internal inductance (electric dynamics) [:#(type=Boolean)]
Self inductance [H]
Rotor's moment of inertia [kg.m2]
Stator's moment of inertia (only has effect if stator not fixed (useSupport = false)) [kg.m2]
Damping coefficient [N.m.s/rad]
False: Stator is fixed internally, false: it can rotate [:#(type=Boolean)]
True: thermal connector is provided, false: temperature is fixed internally [:#(type=Boolean)]
Transformation coefficient [N.m/A]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Temperature of heatPort [K|degC]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Transformation coefficient [N.m/A]
Voltage drop between the two pins [V]
Potential at the pin [V]
Absolute rotation angle of flange [rad|deg]
External support angle (= flange.phi) [rad|deg]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Relative rotation angle (= flange_b.phi - flange_a.phi) [rad|deg]
der(Relative rotation angle (= flange_b.phi - flange_a.phi)) [rad/s]
Relative angular velocity (= der(phi_rel)) [rad/s]
der(Relative angular velocity (= der(phi_rel))) [rad/s2]
Torque between flanges (= flange_b.tau) [N.m]
Absolute rotation angle of flange [rad|deg]
Nominal value of phi_rel (used for scaling) [rad|rad]
Priority to use phi_rel and w_rel as states [:#(type=StateSelect)]
Damping constant [N.m.s/rad]
= true, if heatPort is enabled [:#(type=Boolean)]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Absolute rotation angle of component [rad|deg]
der(Absolute rotation angle of component) [rad/s]
Absolute angular velocity of component (= der(phi)) [rad/s]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
Absolute angular acceleration of component (= der(w)) [rad/s2]
Fixed offset angle of housing [rad|deg]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Torque in flange flange_a and flange_b (tau = flange_a.tau = -flange_b.tau) as output signal [N.m]
Torque in flange flange_a and flange_b (tau = flange_a.tau = -flange_b.tau) as output signal [N.m]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Inductance [H]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Gain value multiplied with input signal [1]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Fixed offset angle of housing [rad|deg]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Potential at the pin [V]
Current flowing into the pin [A]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Cut torque in the flange [N.m]
Absolute angle of support flange [rad|deg]
Accelerating torque acting at flange (= -flange.tau) [N.m]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Absolute rotation angle of component [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Power in flange flange_a as output signal [W]
Torque in flange flange_a and flange_b (tau = flange_a.tau = -flange_b.tau) as output signal [N.m]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Accelerating torque acting at flange (= -flange.tau) [N.m]
Torque in flange flange_a and flange_b (tau = flange_a.tau = -flange_b.tau) as output signal [N.m]
Value of constant voltage [V]
Voltage drop of the two pins (= p.v - n.v) [V]
Potential at the pin [V]
Potential at the pin [V]
Constant output value [N.m]
Connector of Real output signal [N.m]
Gain [1]
Time Constant [s]
Type of initialization (1: no init, 2: steady state, 3/4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of output (= state) [1]
Connector of Real output signal [1]
der(Connector of Real output signal) [s-1]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
DC current of the inverter [V]
[s]


